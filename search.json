[{"path":"https://docs.ropensci.org/stats19/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to stats19","title":"Contributing to stats19","text":"First , thanks considering contributing stats19! üëç ‚Äôs people like make rewarding us - project maintainers - work stats19. üòä stats19 open source project, maintained people care. directly funded .","code":""},{"path":"https://docs.ropensci.org/stats19/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of conduct","title":"Contributing to stats19","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://docs.ropensci.org/stats19/CONTRIBUTING.html","id":"how-you-can-contribute","dir":"","previous_headings":"","what":"How you can contribute","title":"Contributing to stats19","text":"several ways can contribute project. want know contribute open source projects like one, see Open Source Guide.","code":""},{"path":"https://docs.ropensci.org/stats19/CONTRIBUTING.html","id":"share-the-love-Ô∏è","dir":"","previous_headings":"How you can contribute","what":"Share the love ‚ù§Ô∏è","title":"Contributing to stats19","text":"Think stats19 useful? Let others discover , telling person, via Twitter blog post. Using stats19 paper writing? Consider citing .","code":""},{"path":"https://docs.ropensci.org/stats19/CONTRIBUTING.html","id":"ask-a-question-Ô∏è","dir":"","previous_headings":"How you can contribute","what":"Ask a question ‚ÅâÔ∏è","title":"Contributing to stats19","text":"Using stats19 got stuck? Browse documentation see can find solution. Still stuck? Post question issue GitHub. offer user support, ‚Äôll try best address , questions often lead better documentation discovery bugs. Want ask question private? Contact package maintainer email.","code":""},{"path":"https://docs.ropensci.org/stats19/CONTRIBUTING.html","id":"propose-an-idea-","dir":"","previous_headings":"How you can contribute","what":"Propose an idea üí°","title":"Contributing to stats19","text":"idea new stats19 feature? Take look documentation issue list see isn‚Äôt included suggested yet. , suggest idea issue GitHub. can‚Äôt promise implement idea, helps : Explain detail work. Keep scope narrow possible. See want contribute code idea well.","code":""},{"path":"https://docs.ropensci.org/stats19/CONTRIBUTING.html","id":"report-a-bug-","dir":"","previous_headings":"How you can contribute","what":"Report a bug üêõ","title":"Contributing to stats19","text":"Using stats19 discovered bug? ‚Äôs annoying! Don‚Äôt let others experience report issue GitHub can fix . good bug report makes easier us , please include: operating system name version (e.g.¬†Mac OS 10.13.6). details local setup might helpful troubleshooting. Detailed steps reproduce bug.","code":""},{"path":"https://docs.ropensci.org/stats19/CONTRIBUTING.html","id":"improve-the-documentation-","dir":"","previous_headings":"How you can contribute","what":"Improve the documentation üìñ","title":"Contributing to stats19","text":"Noticed typo website? Think function use better example? Good documentation makes difference, help improve welcome!","code":""},{"path":"https://docs.ropensci.org/stats19/CONTRIBUTING.html","id":"the-website","dir":"","previous_headings":"How you can contribute > Improve the documentation üìñ","what":"The website","title":"Contributing to stats19","text":"website generated pkgdown. means don‚Äôt write html: content pulled together documentation code, vignettes, Markdown files, package DESCRIPTION _pkgdown.yml settings. know way around pkgdown, can propose file change improve documentation. , report issue can point right direction.","code":""},{"path":"https://docs.ropensci.org/stats19/CONTRIBUTING.html","id":"function-documentation","dir":"","previous_headings":"How you can contribute > Improve the documentation üìñ","what":"Function documentation","title":"Contributing to stats19","text":"Functions described comments near code translated documentation using roxygen2. want improve function description: Go R/ directory code repository. Look file name function. Propose file change update function documentation roxygen comments (starting #').","code":""},{"path":"https://docs.ropensci.org/stats19/CONTRIBUTING.html","id":"contribute-code-","dir":"","previous_headings":"How you can contribute","what":"Contribute code üìù","title":"Contributing to stats19","text":"Care fix bugs implement new functionality stats19? Awesome! üëè look issue list leave comment things want work . See also development guidelines .","code":""},{"path":"https://docs.ropensci.org/stats19/CONTRIBUTING.html","id":"development-guidelines","dir":"","previous_headings":"","what":"Development guidelines","title":"Contributing to stats19","text":"try follow GitHub flow development. Fork repo clone computer. learn process, see guide. forked cloned project since worked , pull changes original repo clone using git pull upstream master. Open RStudio project file (.Rproj). Write code. Test code (bonus points adding unit tests). Document code (see function documentation ). R CMD check using devtools::check() aim 0 errors warnings. Commit push changes. Submit pull request.","code":""},{"path":"https://docs.ropensci.org/stats19/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright ¬© 2007 Free Software Foundation, Inc.¬†<http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://docs.ropensci.org/stats19/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program‚Äìmake sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers‚Äô authors‚Äô protection, GPL clearly explains warranty free software. users‚Äô authors‚Äô sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users‚Äô freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/stats19/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"‚ÄúLicense‚Äù refers version 3 GNU General Public License. ‚ÄúCopyright‚Äù also means copyright-like laws apply kinds works, semiconductor masks. ‚ÄúProgram‚Äù refers copyrightable work licensed License. licensee addressed ‚Äú‚Äù. ‚ÄúLicensees‚Äù ‚Äúrecipients‚Äù may individuals organizations. ‚Äúmodify‚Äù work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called ‚Äúmodified version‚Äù earlier work work ‚Äúbased ‚Äù earlier work. ‚Äúcovered work‚Äù means either unmodified Program work based Program. ‚Äúpropagate‚Äù work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. ‚Äúconvey‚Äù work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays ‚ÄúAppropriate Legal Notices‚Äù extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://docs.ropensci.org/stats19/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"‚Äúsource code‚Äù work means preferred form work making modifications . ‚ÄúObject code‚Äù means non-source form work. ‚ÄúStandard Interface‚Äù means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. ‚ÄúSystem Libraries‚Äù executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. ‚ÄúMajor Component‚Äù, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . ‚ÄúCorresponding Source‚Äù work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work‚Äôs System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://docs.ropensci.org/stats19/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://docs.ropensci.org/stats19/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users‚Äô Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work‚Äôs users, third parties‚Äô legal rights forbid circumvention technological measures.","code":""},{"path":"https://docs.ropensci.org/stats19/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program‚Äôs source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://docs.ropensci.org/stats19/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 ‚Äúkeep intact notices‚Äù. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called ‚Äúaggregate‚Äù compilation resulting copyright used limit access legal rights compilation‚Äôs users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://docs.ropensci.org/stats19/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. ‚ÄúUser Product‚Äù either (1) ‚Äúconsumer product‚Äù, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, ‚Äúnormally used‚Äù refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. ‚ÄúInstallation Information‚Äù User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://docs.ropensci.org/stats19/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"‚ÄúAdditional permissions‚Äù terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered ‚Äúrestrictions‚Äù within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://docs.ropensci.org/stats19/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://docs.ropensci.org/stats19/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://docs.ropensci.org/stats19/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. ‚Äúentity transaction‚Äù transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party‚Äôs predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://docs.ropensci.org/stats19/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"‚Äúcontributor‚Äù copyright holder authorizes use License Program work Program based. work thus licensed called contributor‚Äôs ‚Äúcontributor version‚Äù. contributor‚Äôs ‚Äúessential patent claims‚Äù patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, ‚Äúcontrol‚Äù includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor‚Äôs essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, ‚Äúpatent license‚Äù express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). ‚Äúgrant‚Äù patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. ‚ÄúKnowingly relying‚Äù means actual knowledge , patent license, conveying covered work country, recipient‚Äôs use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license ‚Äúdiscriminatory‚Äù include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://docs.ropensci.org/stats19/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others‚Äô Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://docs.ropensci.org/stats19/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://docs.ropensci.org/stats19/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License ‚Äúlater version‚Äù applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy‚Äôs public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://docs.ropensci.org/stats19/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM ‚Äú‚Äù WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://docs.ropensci.org/stats19/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://docs.ropensci.org/stats19/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://docs.ropensci.org/stats19/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least ‚Äúcopyright‚Äù line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program‚Äôs commands might different; GUI interface, use ‚Äúbox‚Äù. also get employer (work programmer) school, , sign ‚Äúcopyright disclaimer‚Äù program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) 2018 Robin Lovelace  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. stats19 Copyright (C) 2018 Robin Lovelace This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://docs.ropensci.org/stats19/articles/blog.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"stats19: a package for road safety research","text":"stats19 new R package enables access processing Great Britain‚Äôs official road traffic casualty database, STATS19. started package late 2018 following three main motivations: release 2022 road crash statistics, showed worsening road safety areas, increasing importance making data accessible. realisation many researchers writing add-hoc code clean data, huge amount duplicated (wasted) effort potential mistakes lead mistakes labelling data (). understanding concept ‚Äòmodularity‚Äô software design, following Unix philosophy programs ‚Äòone thing well‚Äô. realisation led code inside rOpenSci-hosted package stplanr split-2 separate packages already: cyclestreets stats19. wider motivation: want roads safer. making data nature road crashes UK publicly accessible (usable format), hope package saves lives. peer reviewed thanks rOpenSci now published Journal Open Source Software (JOSS) (Lovelace et al.¬†2019). installation code, see home rOpenSci: https://github.com/ropensci/stats19, package documentation https://itsleeds.github.io/stats19/. post, ‚Äôll provide bit context, show package works, provide ideads future work building experience. Now good time report package: version 0.2.0 just release CRAN, contains improvements, used blog post (ask = FALSE get_stats19(), example, makes even quicker get data package).","code":""},{"path":"https://docs.ropensci.org/stats19/articles/blog.html","id":"short-history-and-affiliations","dir":"Articles","previous_headings":"","what":"Short history and affiliations","title":"stats19: a package for road safety research","text":"main authors based Institute Transport Studies () Leeds Institute Data Analytics (LIDA), institutions focussed transport data-intensive research. prior experience writing code work road crash data: Robin wrote code academic paper cycle safety Yorkshire based STATS19 data (Lovelace, Roberts, Kellar 2016), put robinlovelace/bikeR repo posterity/reproducibility. Package contributor, Dr Malcolm Morgan, wrote code processing different STATS19 data Cycling Infrastructure Prioritisation Toolkit (CyIPT) put cyipt/stats19. large complex STATS19 data UK‚Äôs Department Transport, open access difficult--use, represented perfect opportunity us get stuck chunky data processing challenge.","code":""},{"path":"https://docs.ropensci.org/stats19/articles/blog.html","id":"what-is-stats19-anyway","dir":"Articles","previous_headings":"","what":"What is STATS19 anyway?","title":"stats19: a package for road safety research","text":"One reviewer comments rOpenSci review process (77 comments - lots knowledge shared) alluded package‚Äôs esoteric name: confess wish package name expressive‚Äìstats19 sounds like introductory statistics class. agree! However, priority package remain faithful data, alternative name options, stats19data, roadcrashesUK roadSafetyData popular. Furthermore, term ‚Äòstats19‚Äô strongly associated road crash data online. URL https://en.wikipedia.org/wiki/STATS19 resolves https://en.wikipedia.org/wiki/Reported_Road_Casualties_Great_Britain, example (page provides excellent introduction STATS19). name comes UK police form called STATS19 (note capital letters). another document called STATS20, guidance STATS19 officers filling STATS19 form. important point dataset omits crashes nobody hurt. Department Transport (DfT) also names dataset STATS19 main web page links open access road crash data. importance road safety informed decision making based crash data overstated. Deliberately avoiding matter life death road safety, two numbers strategy document UK government (2011) worth mentioning show scale numbers: economic welfare costs [road collisions] estimated around ¬£16 billion year insurance payouts motoring claims alone now ¬£12 billion year. Even shocking global statistics, summarised open access reproducible academic paper uses data package explore car-pedestrian crashes: many people die roads year UK (1,793 people 2022, 3 deaths per 100,000) worldwide (1,250,000 people 2015, 17 deaths per 100,000) ‚Äòvision zero‚Äô remains Swedish dream (Johansson 2009), urge people researching STATS19 road safety datasets focus urgent question: stop carnage?","code":""},{"path":"https://docs.ropensci.org/stats19/articles/blog.html","id":"the-road-crash-data-in-stats19","dir":"Articles","previous_headings":"","what":"The road crash data in stats19","title":"stats19: a package for road safety research","text":"three main different types CSV files released DfT: accidents, vehicles casualties tables. schema covering tables good amount work needed understand , let alone able data contained within files convert integers contain meaningful data. annual statistics released consistent way either, making hard people download, even find, relevant files. example, separate files tables certain years (e.g.¬†2016, 2022) 1979 - 2022 2018 now. largest chunk 1979 - 2004 data, made available huge ZIP file (link). Unzipped contains following 3 files, occupy almost 2 GB hard drive:","code":"721M Apr  3  2013 Accidents7904.csv 344M Apr  3  2013 Casualty7904.csv 688M Apr  3  2013 Vehicles7904.csv # total 1.753 GB data"},{"path":"https://docs.ropensci.org/stats19/articles/blog.html","id":"note","dir":"Articles","previous_headings":"","what":"Note","title":"stats19: a package for road safety research","text":"February 2021 run code vignette due CRAN check issues. See https://ropensci.org/blog/2019/02/26/stats19/ final version vignette.","code":"knitr::opts_chunk$set(eval = FALSE)"},{"path":"https://docs.ropensci.org/stats19/articles/blog.html","id":"how-stats19-works","dir":"Articles","previous_headings":"","what":"How stats19 works","title":"stats19: a package for road safety research","text":"introductions way, lets see package can can empower people (including target audiences academics, policy makers road safety campaigners R programmers/analysts wanting test skills large spatio-temporal dataset) access STATS19 data, back 1979. First install package usual way: Attach package follows: easiest way get STATS19 data get_stats19(). function takes 2 main arguments, year type. year can year 1979 2022. just happened? just downloaded, cleaned read-data road crashes recorded police 2022 across Great Britain. can explore crashes_2022 object little : package contains names ‚Äúzip‚Äù files released DfT hosted Amazon servers download. file names included package can found file_names variable name. example: can also get raw data (really want!) see much useful data cleaned labelled stats19 package, compared data provided government: first two columns raw read, next two formatted stats19 package: Note: severity type labelled (problem affects dozens columns), column names inconsistent, dates note cleaned converted user-friendly date (POSIXct) class:","code":"# release version - currently 0.2.0 install.packages(\"stats19\")  # dev version # remotes::install_github(\"ropensci/stats19\") library(stats19) crashes_2022 = get_stats19(year = 2022, type = \"Accidents\", ask = FALSE) nrow(crashes_2022) column_names = names(crashes_2022) length(column_names) head(column_names) class(crashes_2022) kableExtra::kable(head(crashes_2022[, c(1, 4, 5, 7, 10)])) stats19::file_names$dftRoadSafetyData_Vehicles_2022.zip crashes_2022_raw = get_stats19(year = 2022, type = \"Accidents\", ask = FALSE, format = FALSE) kableExtra::kable(cbind(head(crashes_2022_raw[1:2, c(7, 10)]), head(crashes_2022[1:2, c(7, 10)]))) class(crashes_2022_raw$Date) class(crashes_2022$date) class(crashes_2022$date) class(crashes_2022_raw$Date)"},{"path":"https://docs.ropensci.org/stats19/articles/blog.html","id":"creating-geographic-crash-data","dir":"Articles","previous_headings":"","what":"Creating geographic crash data","title":"stats19: a package for road safety research","text":"important feature STATS19 data collision table contains geographic coordinates. provided ~10m resolution UK‚Äôs official coordinate reference system (Ordnance Survey National Grid, EPSG code 27700). stats19 converts non-geographic tables created format_collisions() geographic data form sf package function format_sf() follows: example administrative zone dataset relevance STATS19 data boundaries police forces England, provided packaged dataset police_boundaries. following code chunk demonstrates kind spatial operations can performed geographic STATS19 data, counting plotting number fatalities per police force:","code":"crashes_sf = format_sf(crashes_2022) # crashes_sf = format_sf(crashes_2022, lonlat = TRUE) # provides the data in lon/lat format library(sf) library(dplyr) crashes_sf %>%    filter(accident_severity == \"Fatal\") %>%    select(n_fatalities = accident_index) %>%    aggregate(by = police_boundaries, FUN = length) %>%    plot() west_yorkshire =   police_boundaries[police_boundaries$pfa16nm == \"West Yorkshire\", ] crashes_wy = crashes_sf[west_yorkshire, ] nrow(crashes_wy) # which is 3.36%"},{"path":"https://docs.ropensci.org/stats19/articles/blog.html","id":"the-big-picture-road-safety","dir":"Articles","previous_headings":"","what":"The big picture: road safety","title":"stats19: a package for road safety research","text":"can combine three sets tables analyse data . Lets read datasets first: Lets now read casualties took place West Yorkshire (using crashes_wy object ), count number casualties severity crash: just happened? found subset casualties took place West Yorkshire reference accident_index variable accidents table. used dplyr function summarise(), find number people car, cycling, walking injured. new casualty dataset joined onto crashes_wy dataset. result spatial (sf) data frame crashes West Yorkshire, columns counting many road users different types hurt. joined data additional variables: addition Total number people hurt/killed, cj contains column type casualty (cyclist, car occupant, etc.), number corresponding number type hurt crash. also contains geometry column crashes_sf. words, joins allow casualties vehicles tables geo-referenced. can explore spatial distribution different casualty types. following figure, example, shows spatial distribution pedestrians car passengers hurt car crashes across West Yorkshire 2022: show possible data form, allude next steps, let‚Äôs create interactive map. plot crashes pedestrians hurt, crashes_types, using leaflet package:","code":"#crashes_2022 = get_stats19(year = 2022, type = \"Accidents\", ask = FALSE) casualties_2022 = get_stats19(year = 2022, type = \"casualty\", ask = FALSE) nrow(casualties_2022) vehicles_2022 = get_stats19(year = 2022, type = \"vehicle\", ask = FALSE) nrow(vehicles_2022) library(tidyr) library(dplyr) sel = casualties_2022$accident_index %in% crashes_wy$accident_index casualties_wy = casualties_2022[sel, ] cas_types = casualties_wy %>%    select(accident_index, casualty_type) %>%    group_by(accident_index) %>%    summarise(     Total = n(),     walking = sum(casualty_type == \"Pedestrian\"),     cycling = sum(casualty_type == \"Cyclist\"),     passenger = sum(casualty_type == \"Car occupant\")     )  cj = left_join(crashes_wy, cas_types) base::setdiff(names(cj), names(crashes_wy)) library(ggplot2) crashes_types = cj %>%    filter(accident_severity != \"Slight\") %>%    mutate(type = case_when(     walking > 0 ~ \"Walking\",     cycling > 0 ~ \"Cycling\",     passenger > 0 ~ \"Passenger\",     TRUE ~ \"Other\"   )) ggplot(crashes_types, aes(size = Total, colour = speed_limit)) +   geom_sf(show.legend = \"point\", alpha = 0.3) +   facet_grid(vars(type), vars(accident_severity)) +   scale_size(     breaks = c(1:3, 12),     labels = c(1:2, \"3+\", 12)     ) +   scale_color_gradientn(colours = c(\"blue\", \"yellow\", \"red\")) +   theme(axis.text = element_blank(), axis.ticks = element_blank()) library(leaflet) crashes_pedestrians = crashes_types %>%    filter(walking > 0) # convert to lon lat CRS crashes_pedestrians_lonlat = st_transform(crashes_pedestrians, crs = 4326) pal = colorFactor(palette = \"Reds\", domain = crashes_pedestrians_lonlat$accident_severity, reverse = TRUE) map = leaflet(data = crashes_pedestrians_lonlat, height = \"280px\") %>%   addProviderTiles(provider = providers$OpenStreetMap.BlackAndWhite) %>%   addCircleMarkers(radius = 0.5, color = ~pal(accident_severity)) %>%    addLegend(pal = pal, values = ~accident_severity) %>%    leaflet::addMiniMap(toggleDisplay = TRUE) # map # if you like to see the leaflet version library(geojsonsf) library(htmltools) geojson = sf_geojson(   crashes_pedestrians_lonlat[,c(\"accident_severity\")]) template = paste0(' <link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.4.0/dist/leaflet.css\" integrity=\"sha512-puBpdR0798OZvTTbP4A8Ix/l+A4dHDD0DGqYW6RQ+9jxkRFclaxxQb/SJAWZfWAkuyeQUytO7+7N4QKrDh+drA==\" crossorigin=\"\"/> <script src=\"https://unpkg.com/leaflet@1.4.0/dist/leaflet.js\" integrity=\"sha512-QVftwZFqvtRNi0ZyCtsznlKSWOStnDORoefr1enyq5mVL4tmKB3S/EnC3rRJcxCPavG10IcrVGSmPh6Qw5lwrg==\" crossorigin=\"\"><\/script> <div id=\"mapid\" style=\"width: 100%; height: 400px;\"> <script>     var map = L.map(\"mapid\");     L.tileLayer(\"https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw\", {         maxZoom: 18,         attribution: \\'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap<\/a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA<\/a>, Imagery ¬© <a href=\"https://www.mapbox.com/\">Mapbox<\/a>\\',         id: \"mapbox.streets\"   }).addTo(map);      var json = ', geojson, ';',    '   var geojsonMarkerOptions = {     radius: 6,     color: \"#000\",     weight: 1,     opacity: 1,     fillOpacity: 0.5   };   var layer = L.geoJSON(json, {     pointToLayer: function (feature, latlng) {         return L.circleMarker(latlng, geojsonMarkerOptions);     },     style: function(feature) {       switch (feature.properties.accident_severity) {           case \"Serious\": return {color: \"#FEB24C\"};           case \"Fatal\":   return {color: \"#BD0026\"};        }     }   }).addTo(map);   map.fitBounds(layer.getBounds());   var legend = L.control({position: \"bottomright\"});     legend.onAdd = function (map) {         var div = L.DomUtil.create(\"div\", \"info legend\"), labels = [];     labels.push(\"<i style=\\'background:#FEB24C\\'><\/i>Serious\");     labels.push(\"<i style=\\'background:#BD0026\\'><\/i>Fatal\");         div.innerHTML = labels.join(\"<br>\");         return div;     };   legend.addTo(map);   // control that shows state info on hover     var info = L.control();     info.onAdd = function (map) {         this._div = L.DomUtil.create(\"div\", \"info\");         this.update();         return this._div;     };     info.update = function (props) {         this._div.innerHTML = \"<h6>Crashes in West Yorkshire (2022)<\/h6>\";     };     info.addTo(map); <\/script> <style> .info { padding: 6px 8px; font: 14px/16px Arial, Helvetica, sans-serif; background: white; background: rgba(255,255,255,0.8); box-shadow: 0 0 15px rgba(0,0,0,0.2); border-radius: 5px; } .info h4 { margin: 0 0 5px; color: #777; } .legend { text-align: left; line-height: 18px; color: #555; } .legend i { width: 18px; height: 18px; float: left; margin-right: 8px; opacity: 0.7; }<\/style> <\/div>') path = file.path(tempdir(), \"temp.html\") write(template, path) includeHTML(path)"},{"path":"https://docs.ropensci.org/stats19/articles/blog.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"stats19: a package for road safety research","text":"stats19 provides access reliable official road safety dataset. covered post, helps data discovery, download, cleaning formatting, allowing focus real work analysis (see package‚Äôs introductory vignette ). experience, 80% time spent using STATS19 data spent data cleaning. Hopefully, now data freely available useful form, 100% time can spent analysis! think help many people, especially, including campaigners, academics local authority planners aiming make roads UK rest world safe place us. many possible next steps, including: Comparing datasets interventions 20 mph zones links street morphology (sarkar_street_2018?). creation general software accessing working road crash data worldwide. Making data even available provide data part interactive web application, technique successfully used Propensity Cycle Tool (PCT) project hosted www.pct.bike/ (likely take times/resources beyond can provide spare time!). now, however, want take opportunity celebrate release stats19 üéâ, thank rOpenSci great review process üôè let know: package data now , ready used üöÄ.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/stats19/articles/stats19-training-setup.html","id":"time","dir":"Articles","previous_headings":"","what":"Time","title":"An introduction to road safety analysis with R: setup notes","text":"Perhaps important pre-requisite time. ‚Äôll need find time work-materials, either one go (see suggested agenda ) chunks perhaps 1 hour per week 2 month period. think ~8 hours good amount time spend course can done small pieces, e.g.: ‚Äôre totally new R 3 hour session one hour break sections 1 4 ‚Äôre intermediant user, skim sections 1:3 focus sections 4:6 gain understanding temporal spatial aspects data hourse ‚Äôre advanced user, feel free skip ahead work sections find interesting.","code":""},{"path":"https://docs.ropensci.org/stats19/articles/stats19-training-setup.html","id":"day-course-agenda","dir":"Articles","previous_headings":"","what":"2 day course agenda","title":"An introduction to road safety analysis with R: setup notes","text":"structured 2 day course R beginners, preliminary agenda follows:","code":""},{"path":"https://docs.ropensci.org/stats19/articles/stats19-training-setup.html","id":"day-1-an-introduction-to-r-and-rstudio-for-spatial-and-temporal-data","dir":"Articles","previous_headings":"2 day course agenda","what":"Day 1: An introduction to R and RStudio for spatial and temporal data","title":"An introduction to road safety analysis with R: setup notes","text":"09:00-09:30 Arrival set-09:30-11:00 Introduction course software Introduction R + coding video/links R installation questions/debugging use RStudio (practical groups 2) R classes working data frames (CC) Break 11:15-12:30 Working temporal data Time classes Filtering time crash Aggregating time Forecasting crashes time Lunch 13:30-15:00 Working spatial data Spatial data R Context: spatial ecosystem (see section 1.4 Geocomputation R - package ecosystem) Exercises: Section 6 handout reading: Section 3.2 3.2.2 handouts Break 15:15-15:30 Talk Road Safety 1 15:30-16:15 Practical - Applying methods stats19 data - taster access data stats19 Key stats19 functions Excercises: analysing road crash data Isle Wight 16:15-16:30 Talk Road Safety 2","code":""},{"path":"https://docs.ropensci.org/stats19/articles/stats19-training-setup.html","id":"day-2-road-safety-analysis-with-r","dir":"Articles","previous_headings":"2 day course agenda","what":"Day 2 road safety analysis with R","title":"An introduction to road safety analysis with R: setup notes","text":"09:30-11:00 Point pattern analysis Visualising data tmap Spatial temporal subsetting Aggregation 11:15-12:30 Road network data Desire lines: using origin-destination data Downloading road network data OSM Buffers road networks Lunch 13:30-15:00 Analysing crash data road network Break 15:15-15:30: Talk Road Safety 3 15:30-16:30 Applying methods data","code":""},{"path":"https://docs.ropensci.org/stats19/articles/stats19-training.html","id":"note","dir":"Articles","previous_headings":"","what":"Note","title":"Introduction to R for road safety: an introduction to R and practical exercises","text":"introductory practical vignette largely replaced workbook ‚ÄúReproducible Road Safety Research R‚Äù, can found https://itsleeds.github.io/rrsrr/ PDF racfoundation.org (Lovelace 2020). workbook comprehensive content tutorial recommended place learn using R reproducible road safety research.","code":""},{"path":"https://docs.ropensci.org/stats19/articles/stats19-training.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Introduction to R for road safety: an introduction to R and practical exercises","text":"document provides information, code exercises test improve R skills emphasis road safety research. initially developed support 2 day course. course based open road crash records stats19 package (Lovelace et al. 2019). However, content use anyone working road crash data (minimum): timestamp location (address can geocoded) Attribute data, severity crash, mode vehicles involved etc. type, run ensure understand line code document. Code data supporting content can found package‚Äôs GitHub repo github.com/ropensci/stats19. ‚Äòissue tracker‚Äô associated repo good place ask questions course.","code":""},{"path":"https://docs.ropensci.org/stats19/articles/stats19-training.html","id":"prerequisites","dir":"Articles","previous_headings":"Introduction","what":"Prerequisites","title":"Introduction to R for road safety: an introduction to R and practical exercises","text":"experienced R, strongly advised read-importantly test R RStudio attempting analyse road crash data R. See stats19-training-setup vignette https://docs.ropensci.org/stats19/articles/stats19-training-setup.html guidance getting started R, RStudio installing R packages. completing course requires following packages, can installed install.packages(), can loaded follows: type, run ensure understand line code document.","code":"library(pct)      # access travel data from DfT-funded PCT project  library(sf)       # spatial vector data classes library(stats19)  # get stats19 data library(stplanr)  # transport planning tools library(tidyverse)# packages for 'data science' library(tmap)     # interactive maps"},{"path":"https://docs.ropensci.org/stats19/articles/stats19-training.html","id":"r-and-rstudio","dir":"Articles","previous_headings":"","what":"R and RStudio","title":"Introduction to R for road safety: an introduction to R and practical exercises","text":"learning outcomes first session learn: RStudio main features scripts, R objects functions, subsetting, basic plotting, getting help. first exercise open RStudio take look around identify main components, shown figure . Explore main components RStudio. Try changing Global Settings (Tools menu) see RStudio‚Äôs short cuts pressing Alt-Shift-K (Option+Shift+K Mac).","code":""},{"path":"https://docs.ropensci.org/stats19/articles/stats19-training.html","id":"projects-and-scripts","dir":"Articles","previous_headings":"R and RStudio","what":"Projects and scripts","title":"Introduction to R for road safety: an introduction to R and practical exercises","text":"Projects way organise related work together. project folder Rproj file. Advice: always working projects make life easier! Start new project : File > New Project can choose create new directory (folder) associate project existing directory. Make new project called stats1-course save sensible place computer. Notice stats1-course now appears top right RStudio. Scripts files R code stored. Keeping code sensibly named, well organised reproducible scripts make life easier: simply type code console, require retyping commands time run . Instead, code want keep share saved script files, plain text files .R extension. Make new script Flie > New File > Rscript Ctrl+Shift+N Save script give sensible name like stats19-lesson-1.R File > Save, save button toolbar, Ctrl+S. Pro tip: can also create new R scripts typing running command R console: Keeping scripts files associated project single folder per project (RStudio project) help find things need develop efficient workflow.","code":"file.edit(\"stats19-lesson-1.R\")"},{"path":"https://docs.ropensci.org/stats19/articles/stats19-training.html","id":"writing-and-running-code","dir":"Articles","previous_headings":"R and RStudio","what":"Writing and running code","title":"Introduction to R for road safety: an introduction to R and practical exercises","text":"Let‚Äôs start basic R operations. Write code new stats19-lesson-1.R R script execute result line--line pressing Ctrl+Enter code creates two objects, vectors 5 elements, plots (bonus: check length using length() function). Save script pressing Ctrl+S. several ways run code within script worth becoming familiar . Try running code saved previous section using methods: Place cursor different places line code press Ctrl+Enter run line code. Highlight block code part line code press Ctrl+Enter run highlighted code. Press Ctrl+Shift+Enter run code script. Press Run button toolbar run code script. Use function source() run code script e.g.¬†source(\"stats19-lesson-1.R\") Pro tip: Try jumping console source editor pressing Ctl+1 Ctl+2.","code":"x = 1:5 y = c(0, 1, 3, 9, 18) plot(x, y)"},{"path":"https://docs.ropensci.org/stats19/articles/stats19-training.html","id":"viewing-objects","dir":"Articles","previous_headings":"R and RStudio","what":"Viewing Objects","title":"Introduction to R for road safety: an introduction to R and practical exercises","text":"Create new objects typing running following code chunk new script, e.g.¬†called objects.R. can view objects range ways: Type name object console, e.g.¬†crashes small_matrix, run code. Scroll see numbers didn‚Äôt fit screen. Use head() function view just first 6 rows e.g.¬†head(small_matrix) Bonus: use n argument previous function call show first 2 rows small_matrix Click crashes object environment tab View spreadsheet. Run command View(vehicle_type). just happened? can also get overview object using range functions, including summary(), class(), typeof(), dim(), length(). can, example, view summary casualty_age variable running following line code: Exercise try functions objects, results give? Bonus: Find class column vehicle_type data frame crashes command class(crashes$vehicle_type). changed? Create new object called crashes_char keeps class character vectors intact using function tibble::tibble() (see tibble.tidyverse.org Section 4 details).","code":"vehicle_type = c(\"car\", \"bus\", \"tank\") casualty_type = c(\"pedestrian\", \"cyclist\", \"cat\") casualty_age = seq(from = 20, to = 60, by = 20) set.seed(1) dark = sample(x = c(TRUE, FALSE), size = 3, replace = TRUE) small_matrix = matrix(1:24, nrow = 12) crashes = data.frame(vehicle_type, casualty_type, casualty_age, dark) summary(casualty_age) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>      20      30      40      40      50      60"},{"path":"https://docs.ropensci.org/stats19/articles/stats19-training.html","id":"autocompletion","dir":"Articles","previous_headings":"R and RStudio","what":"Autocompletion","title":"Introduction to R for road safety: an introduction to R and practical exercises","text":"RStudio can help write code autocompleting . RStudio look similar objects functions typing first three letters name.  one option can select list using mouse arrow keys. Within function, can get list arguments pressing Tab.","code":""},{"path":"https://docs.ropensci.org/stats19/articles/stats19-training.html","id":"getting-help","dir":"Articles","previous_headings":"R and RStudio","what":"Getting help","title":"Introduction to R for road safety: an introduction to R and practical exercises","text":"Every function R help page. can view help using ? example ?sum. Many packages also contain vignettes, long form help documents containing examples guides. vignette() show list vignettes available, can show specific vignette example vignette(topic = \"sf1\", package = \"sf\").","code":""},{"path":"https://docs.ropensci.org/stats19/articles/stats19-training.html","id":"commenting-code","dir":"Articles","previous_headings":"R and RStudio","what":"Commenting Code","title":"Introduction to R for road safety: an introduction to R and practical exercises","text":"good practice use comments code explain . can comment code using # example: can comment/uncomment whole block text selecting using Ctrl+Shift+C. Pro tip: can add comment section using Ctrl + Shift + R","code":"# Create vector objects (a whole line comment) x = 1:5 # a seqence of consecutive integers (inline comment) y = c(0, 1, 3, 9, 18.1)"},{"path":"https://docs.ropensci.org/stats19/articles/stats19-training.html","id":"the-global-environment","dir":"Articles","previous_headings":"R and RStudio","what":"The global environment","title":"Introduction to R for road safety: an introduction to R and practical exercises","text":"Environment tab shows objects environment, includes datasets, parameters, functions created. default, new objects appear Global Environment can see environments drop-menu. example, package environment. Sometimes wish remove things environment, perhaps longer need things getting cluttered. can remove object rm() function e.g.¬†rm(x) rm(x, y) can clear whole environment broom button Environment Tab. Remove object x created previous section. happens try print x entering console? Try running following commands order: save.image(); rm(list = ls()); load(\".RData\"). happened? big (many bytes) .RData file project‚Äôs folder? Tidy removing .Rdata file file.remove(\".Rdata\").","code":""},{"path":"https://docs.ropensci.org/stats19/articles/stats19-training.html","id":"debugging-code","dir":"Articles","previous_headings":"R and RStudio","what":"Debugging Code","title":"Introduction to R for road safety: an introduction to R and practical exercises","text":"code shown far reproducible. test RStudio‚Äôs debugging features, let‚Äôs write code fails, illustrated figure .  problem code shown figure? Create types error code run (e.g.¬†symetrical brackets typos) RStudio pick errors? happens try run buggy code? Always address debugging prompts ensure code reproducible","code":""},{"path":"https://docs.ropensci.org/stats19/articles/stats19-training.html","id":"saving-r-objects","dir":"Articles","previous_headings":"R and RStudio","what":"Saving R objects","title":"Introduction to R for road safety: an introduction to R and practical exercises","text":"already seen can save R scripts. can also save individual R objects RDS format. can also read back data. R also supports many formats, including CSV files, can created imported functions readr::read_csv() readr::write_csv() (see also readr package). Notice crashes3 crashes identical, changed? Hint: read help page associated ?readr::write_csv.","code":"saveRDS(crashes, \"crashes.Rds\") crashes2 = readRDS(\"crashes.Rds\") identical(crashes, crashes2) #> [1] TRUE readr::write_csv(crashes, \"crashes.csv\") crashes3 = readr::read_csv(\"crashes.csv\") identical(crashes3, crashes)"},{"path":[]},{"path":"https://docs.ropensci.org/stats19/articles/stats19-training.html","id":"subsetting-by-index-or-name","dir":"Articles","previous_headings":"Manipulating R objects","what":"Subsetting by index or name","title":"Introduction to R for road safety: an introduction to R and practical exercises","text":"Subsetting returns part R object. can done providing numbers representing positions elements want (e.g.¬†2nd element) logical vector, values associated TRUE returned. Two dimension object matrices data frames can subset rows columns. Subsetting base R done square brackets [] name object. Run following commands practice subsetting. Use $ operator print dark column crashes. Subset crashes [,] syntax first third columns crashes returned. Return 2nd row 3rd column crashes dataset. Return 2nd row columns 2:3 crashes dataset. Bonus: class() objects created previous exercises?","code":"casualty_age[2:3] # second and third casualty_age crashes[c(1, 2), ] # first and second row of crashes crashes$vehicle_type # returns just one column crashes[, c(\"casualty_type\", \"casualty_age\")] # first and third columns"},{"path":"https://docs.ropensci.org/stats19/articles/stats19-training.html","id":"subsetting-by-values","dir":"Articles","previous_headings":"Manipulating R objects","what":"Subsetting by values","title":"Introduction to R for road safety: an introduction to R and practical exercises","text":"also possible subset objects values elements. works [ operator accepts logical vectors returned queries ‚Äòless 3?‚Äô (x < 3 R) ‚Äòlight?‚Äô (crashes$dark == FALSE), demonstrated : Subset casualty_age object using inequality (<) elements less 50 returned. Subset crashes data frame tanks returned using == operator. Bonus: assign age tanks 61.","code":"x[c(TRUE, FALSE, TRUE, FALSE, TRUE)] # 1st, 3rd, and 5th element in x x[x == 5] # only when x == 5 (notice the use of double equals) x[x < 3] # less than 3 x[x < 3] = 0 # assign specific elements casualty_age[casualty_age %% 6 == 0] # just the ages that are a multiple of 6 crashes[crashes$dark == FALSE, ]"},{"path":"https://docs.ropensci.org/stats19/articles/stats19-training.html","id":"dealing-with-nas-and-recoding","dir":"Articles","previous_headings":"Manipulating R objects","what":"Dealing with NAs and recoding","title":"Introduction to R for road safety: an introduction to R and practical exercises","text":"R objects can value NA. R represents missing data. NA values common real-world data can cause trouble, example functions can told ignore NA values. can find NAs using .na() function, remove remove records NAs warned: average value excluding NAs may representative.","code":"z = c(4, 5, NA, 7) sum(z) # result is NA sum(z, na.rm = TRUE) # result is equal to 4 + 5 + 7 is.na(z) z_nona = z[!is.na(z)] # note the use of the not operator ! sum(z)"},{"path":"https://docs.ropensci.org/stats19/articles/stats19-training.html","id":"changing-class","dir":"Articles","previous_headings":"Manipulating R objects","what":"Changing class","title":"Introduction to R for road safety: an introduction to R and practical exercises","text":"Sometimes may want change class object. called class coercion, can done functions .logical(), .numeric() .matrix(). Coerce vehicle_type column crashes class character. Coerce crashes object matrix. happened values? Bonus: difference output summary() character factor variables?","code":""},{"path":"https://docs.ropensci.org/stats19/articles/stats19-training.html","id":"recoding-values","dir":"Articles","previous_headings":"Manipulating R objects","what":"Recoding values","title":"Introduction to R for road safety: an introduction to R and practical exercises","text":"Often useful ‚Äòrecode‚Äô values. raw STATS19 files, example, -1 means NA. many ways recode values R, simplest mature use factors, shown : Recode z Slight, Serious Fatal 1:3 respectively. Bonus: read help file ?dplyr::case_when try recode values using function.","code":"z = c(1, 2, -1, 1, 3) l = c(NA, \"a\", \"b\", \"c\") # labels in ascending order z_factor = factor(z, labels = l) z_charcter = as.character(z_factor) z_charcter #> [1] \"a\" \"b\" NA  \"a\" \"c\""},{"path":"https://docs.ropensci.org/stats19/articles/stats19-training.html","id":"now-you-are-ready-to-use-r","dir":"Articles","previous_headings":"Manipulating R objects","what":"Now you are ready to use R","title":"Introduction to R for road safety: an introduction to R and practical exercises","text":"Bonus: reproduce following plot","code":"eyes = c(2.3, 4, 3.7, 4) eyes = matrix(eyes, ncol = 2, byrow = T) mouth = c(2, 2, 2.5, 1.3, 3, 1, 3.5, 1.3, 4, 2) mouth = matrix(mouth, ncol = 2, byrow = T) plot(eyes, type = \"p\", main = \"RRR!\", cex = 2, xlim = c(1, 5), ylim = c(0, 5)) lines(mouth, type = \"l\", col = \"red\")"},{"path":[]},{"path":"https://docs.ropensci.org/stats19/articles/stats19-training.html","id":"what-are-packages","dir":"Articles","previous_headings":"R Packages","what":"What are packages?","title":"Introduction to R for road safety: an introduction to R and practical exercises","text":"R 15,000 packages (effectively plugins base R), extending almost every direction statistics computing. Packages provide additional functions, data documentation. often written subject-matter experts therefore tend fit well workflow analyst particular specialism. two main stages using package: installing loading . third stage updating , also important. Install new packages Comprehensive R Archive Network command install.packages() (remotes::install_github() install GitHub). Update packages command update.package() Tools > Check Package Updates RStudio. need install package . Installed packages loaded command library(). Usually, package load silently. cases package provide message, illustrated . use function package without first loading package, use double colons, shown (calls tibble() function tibble package). Take look Packages tab Files pane RStudio (bottom right default). version stats19 package installed computer? Run command update.packages(). happens? ?","code":"install.packages(\"sf\") # remotes::install_github(\"r-spatial/sf\") library(sf) #> Linking to GEOS 3.10.2, GDAL 3.4.1, PROJ 8.2.1; sf_use_s2() is TRUE crashes_tibble = tibble::tibble(   vehicle_type,   casualty_type,   casualty_age,   dark )"},{"path":"https://docs.ropensci.org/stats19/articles/stats19-training.html","id":"ggplot2","dir":"Articles","previous_headings":"R Packages","what":"ggplot2","title":"Introduction to R for road safety: an introduction to R and practical exercises","text":"Let‚Äôs take look particular package. ggplot2 generic plotting package part ‚Äòtidyverse‚Äô meta-package, ‚Äúopinionated collection R packages designed data science‚Äù. packages tidyverse ‚Äúshare underlying design philosophy, grammar, data structures‚Äù. ggplot2 flexible, popular, dozens add-packages build , gganimate. plot non-spatial data, works follows (see figure , left result): Note + operator adds layers onto one another. Install package build ggplot2 begins gg. Hint: enter install.packages(gg) hit Tab cursor g ). Open help page newly installed package ?package_name::function() syntax. Attach package. Bonus: try using functionality new ‚Äògg‚Äô package building example create plots like shown (hint: right plot uses economist theme ggthemes package, try themes).","code":"library(ggplot2) ggplot(crashes) + geom_point(aes(x = casualty_type, y = casualty_age))"},{"path":"https://docs.ropensci.org/stats19/articles/stats19-training.html","id":"dplyr-and-pipes","dir":"Articles","previous_headings":"R Packages","what":"dplyr and pipes","title":"Introduction to R for road safety: an introduction to R and practical exercises","text":"Another useful package tidyverse dplyr. provides functions manipulating data frames using pipe operator %>%. pipe puts output one command first argument next, shown (note results ): Useful dplyr functions demonstrated . Use dplyr filter row casualty_age less 18, 28. Use arrange function sort crashes object descending order age (hint: see ?arrange help page). Read help page dplyr::mutate(). function ? Use mutate function create new variable, birth_year, crashes data.frame defined current year minus age. Bonus: Use %>% operator filter output previous exercise observations birth_year 1969 returned.","code":"library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union class(crashes)        #> [1] \"data.frame\" crashes %>% class() #> [1] \"data.frame\" crashes %>%   filter(casualty_age > 50) # filter rows crashes %>%   select(casualty_type) # select just one column crashes %>%   group_by(dark) %>%    summarise(mean_age = mean(casualty_age))"},{"path":"https://docs.ropensci.org/stats19/articles/stats19-training.html","id":"temporal-data","dir":"Articles","previous_headings":"","what":"Temporal data","title":"Introduction to R for road safety: an introduction to R and practical exercises","text":"analysis manipulation temporal data first load R package lubridate: simplest example Date object can analyze just current date, .e. can manipulate object using several lubridate functions extract current day, month, year, weekday ‚Ä¶ Exercises: Look help page function month see possible extract current month character vector Look functions lubridate extract current weekday number, week year day year Date variables often stored simply character vectors. problem, since R always smart enough distinguish character vectors representing Dates. lubridate provides functions can translate wide range date encodings ymd(), extracts Year Month Day character string, demonstrated . Import function read_csv try recognize Date variables. Sometimes fails. can manually create Date objects, shown . Exercises: Extract day, year-day, month weekday (non-abbreviated character vector) element x_date. Convert \"09/09/93\" date object extract weekday. Bonus: Read help page .Date strptime details base R functions dates. Bonus: Read Chapter 16 R Data Science book details lubridate package. can use Dates also subsetting events dataframe. example, define x_date add crash dataset, .e. can subset events using Dates. example Exercises: Select events (rows crashes) occurred January Select events ocurred odd year-day Select events ocurred leap-year (HINT: check function leap_year) Select events ocurred weekend June Select events ocurred weekend June Count many events ocurred day week. Now ‚Äôll take look time components Date. Using function hms (acronym Hour Minutes Seconds) subfunctions hm ms, can parse character vector representing several times Hour object (tecnically called Period object). can manipulate objects using several lubridate functions extract hour component, minutes : Hour data specify seconds, just use subfunction hms, namely hm, everything works . can use Hour data also subsetting events, like Dates. Let‚Äôs add new column crashes data, Exercises: Filter events ocurred midday (.e.¬†PM events). Hint: answer may include >= 12. Filter events ocurred 15:00 19:00 Bonus (difficult): run following code, downloades data car crashes occurred 2022. Extract weekday variable called date. many crashes happened Monday? Advanced challenge: calculate many crashes occurred day week. plot ggplot2. Repeat exercises extracting hour car accident variable called time. combine two informations single plot?","code":"library(lubridate) today() #> [1] \"2024-03-10\" x = today() day(x) month(x) year(x) weekdays(x) as.Date(\"2019-10-17\") # works as.Date(\"2019 10 17\") # fails ymd(\"2019 10 17\") # works dmy(\"17/10/2019\") # works x = c(\"2009-01-01\", \"2009-02-02\", \"2009-03-03\") x_date = ymd(x) x_date #> [1] \"2009-01-01\" \"2009-02-02\" \"2009-03-03\" crashes$casualty_day = x_date filter(crashes, day(casualty_day) < 7) # the events that ocurred in the first week of the month #>   vehicle_type casualty_type casualty_age  dark casualty_day #> 1          car    pedestrian           20  TRUE   2009-01-01 #> 2          bus       cyclist           40 FALSE   2009-02-02 #> 3         tank           cat           60  TRUE   2009-03-03 filter(crashes, weekdays(casualty_day) == \"Monday\") # the events occurred on monday #>   vehicle_type casualty_type casualty_age  dark casualty_day #> 1          bus       cyclist           40 FALSE   2009-02-02 x = c(\"18:23:35\", \"00:00:01\", \"12:34:56\") x_hour = hms(x) x_hour #> [1] \"18H 23M 35S\" \"1S\"          \"12H 34M 56S\" hour(x_hour) #> [1] 18  0 12 minute(x_hour) #> [1] 23  0 34 second(x_hour) #> [1] 35  1 56 x = c(\"18:23\", \"00:00\", \"12:34\") (x_hour = hm(x)) #> [1] \"18H 23M 0S\" \"0S\"         \"12H 34M 0S\" crashes$casualty_hms = hms(c(\"18:23:35\", \"00:00:01\", \"12:34:56\")) crashes$casualty_hour = hour(crashes$casualty_hms) library(stats19) crashes_2022 = stats19::get_stats19(year = 2022, type = \"ac\") crashes_2022"},{"path":[]},{"path":"https://docs.ropensci.org/stats19/articles/stats19-training.html","id":"sf-objects","dir":"Articles","previous_headings":"Spatial data","what":"sf objects","title":"Introduction to R for road safety: an introduction to R and practical exercises","text":"road crashes happen somewhere , UK least, collisions recorded police given geographic coordinates, something can help prioritise interventions save lives intervening around ‚Äòcrash hotspots‚Äô. R strong geographic data capabilities, sf package provides generic class spatial vector data: points, lines polygons, represented sf objects special ‚Äògeometry column‚Äô, typically called ‚Äògeom‚Äô ‚Äògeometry‚Äô, extending data frame class ‚Äôve already seen crashes. Create sf data frame called crashes_sf follows: Plot geometry column crashes_sf (hint: solution may contain $geometry). result like figure , congratulations, worked!). Plot crashes_sf, showing age variable. Plot 2nd 3rd crashes, showing happened dark. Bonus: far points apart (hint: sf functions begin st_)? Bonus: Near settlement tank runover cat?","code":"library(sf) # load the sf package for working with spatial data crashes_sf = crashes # create copy of crashes dataset crashes_sf$longitude = c(-1.3, -1.2, -1.1) crashes_sf$latitude = c(50.7, 50.7, 50.68) crashes_sf = st_as_sf(crashes_sf, coords = c(\"longitude\", \"latitude\"), crs = 4326) # plot(crashes_sf[1:4]) # basic plot # mapview::mapview(crashes_sf) # for interactive map"},{"path":"https://docs.ropensci.org/stats19/articles/stats19-training.html","id":"reading-and-writing-spatial-data","dir":"Articles","previous_headings":"Spatial data","what":"Reading and writing spatial data","title":"Introduction to R for road safety: an introduction to R and practical exercises","text":"can read write spatial data read_sf() write_sf(), shown (see ?read_sf). See Chapter 6 Geocomputation R information.","code":"write_sf(zones, \"zones.geojson\") # save geojson file write_sf(zones, \"zmapinfo\", driver = \"MapInfo file\") read_sf(\"zmapinfo\") # read in mapinfo file"},{"path":"https://docs.ropensci.org/stats19/articles/stats19-training.html","id":"sf-polygons","dir":"Articles","previous_headings":"Spatial data","what":"sf polygons","title":"Introduction to R for road safety: an introduction to R and practical exercises","text":"Note: code beyond point evaluated vignette: sf objects can also represent administrative zones. illustrated reference zones, spatial object representing Isle Wight, download using pct package (note: [1:9] appended function selects first 9 columns). class zones object? column names? Print first 2 rows columns 6:8 (result ).","code":"knitr::opts_chunk$set(eval = FALSE) zones = pct::get_pct_zones(\"isle-of-wight\")[1:9]"},{"path":"https://docs.ropensci.org/stats19/articles/stats19-training.html","id":"spatial-subsetting-and-sf-plotting","dir":"Articles","previous_headings":"Spatial data","what":"Spatial subsetting and sf plotting","title":"Introduction to R for road safety: an introduction to R and practical exercises","text":"Like index value subsetting, spatial subsetting can done [ notation. Subset zones contain features crashes_sf follows: plot new layer top existing sf plot, use add = TRUE argument. Remember plot geometry column objects avoid multiple maps. Colours can set col argument. Plot geometry zones, zones containing crashes overlaid top red. Plot zone containing 2nd crash blue. Bonus: plot zones intersect zone containing crashes, actual crash points plotted black.","code":"zones_containing_crashes = zones[crashes_sf, ]"},{"path":"https://docs.ropensci.org/stats19/articles/stats19-training.html","id":"geographic-joins","dir":"Articles","previous_headings":"Spatial data","what":"Geographic joins","title":"Introduction to R for road safety: an introduction to R and practical exercises","text":"Geographic joins involve assigning values one object new column another, based geographic relationship . sf objects works follows: Plot casualty_age variable new zones_joined object (see figure verify result). many zones returned previous command? Select geo_code column zones dark column crashes_sf use left = FALSE argument return zones crashes occured. Plot result. See Chapter 4 Geocomputation R (Lovelace, Nowosad, Muenchow 2019) information geographic joins.","code":"zones_joined = st_join(zones[1], crashes_sf)"},{"path":"https://docs.ropensci.org/stats19/articles/stats19-training.html","id":"crss","dir":"Articles","previous_headings":"Spatial data","what":"CRSs","title":"Introduction to R for road safety: an introduction to R and practical exercises","text":"Get set Coordinate Reference Systems (CRSs) command st_crs(). Transform CRSs command st_transform(), demonstrated code chunk , converts ‚Äòlon/lat‚Äô geographic CRS crashes_sf projected CRS British National Grid: Try subset zones crashes_osgb. error message say? Create zones_osgb transforming zones object. Bonus: use st_crs() find units measurement British National Grid? information CRSs see Chapter 6 Geocompuation R.","code":"crashes_osgb = st_transform(crashes_sf, 27700)"},{"path":"https://docs.ropensci.org/stats19/articles/stats19-training.html","id":"buffers","dir":"Articles","previous_headings":"Spatial data","what":"Buffers","title":"Introduction to R for road safety: an introduction to R and practical exercises","text":"Buffers polygons surrounding geometries (usually) fixed distance. Currently buffer operations R work objects projected CRSs. Find read help page sf‚Äôs buffer function. Create object called crashes_1km_buffer representing area within 1 km crashes. Bonus: try creating buffers geographic version crashes_sf object. happens?","code":""},{"path":"https://docs.ropensci.org/stats19/articles/stats19-training.html","id":"attribute-operations-on-sf-objects","dir":"Articles","previous_headings":"Spatial data","what":"Attribute operations on sf objects","title":"Introduction to R for road safety: an introduction to R and practical exercises","text":"sf objects data.frames, can non-spatial operations . Try following attribute operations zones data. Create object called zones_small contains regions less 3000 people column Create selection object called sel_high_car TRUE regions median numbers people travel car FALSE otherwise Create object called zones_foot contains foot attribute zones Bonus: plot zones_foot using function plot show walking popular mode travel work Bonus: bulding answers previous questions, use filter() dplyr package subset small regions car use high. Bonus: population density region (hint: may need use functions st_area(), .numeric() use ‚Äò‚Äô column)? Bonus: zone highest percentage people cycle?","code":"# load example dataset if it doesn't already exist zones = pct::get_pct_zones(\"isle-of-wight\") sel = zones$all > 3000  # create a subsetting object zones_large = zones[sel, ] # subset areas with a popualtion over 100,000 zones_2 = zones[zones$geo_name == \"Isle of Wight 002\",] # subset based on 'equality' query zones_first_and_third_column = zones[c(1, 3)] zones_just_all = zones[\"all\"]"},{"path":"https://docs.ropensci.org/stats19/articles/stats19-training.html","id":"matching-roads-to-crashes","dir":"Articles","previous_headings":"Spatial data","what":"Matching roads to crashes","title":"Introduction to R for road safety: an introduction to R and practical exercises","text":"think forgot something . example introduce st_nearest_feature? counting using st_within st_buffer.","code":""},{"path":"https://docs.ropensci.org/stats19/articles/stats19-training.html","id":"visualising-spatial-datasets","dir":"Articles","previous_headings":"","what":"Visualising spatial datasets","title":"Introduction to R for road safety: an introduction to R and practical exercises","text":"far used plot() function make maps. ‚Äôs fine basic visualisation, publication-quality maps, recommend using tmap (see Chapter 8 Geocomputation R reasons alternatives). Load package follows: Create following plots using plot() tm_shape() + tm_polygons() functions (note: third figure relies setting tmap_mode(\"view\"). Add additional layer interactive map showing location crashes, using marker dot symbols. Bonus: Change default basemap (hint: may need search package documentation online solution).","code":"library(tmap) tmap_mode(\"plot\")"},{"path":"https://docs.ropensci.org/stats19/articles/stats19-training.html","id":"analysing-point-data-from-stats19","dir":"Articles","previous_headings":"","what":"Analysing point data from stats19","title":"Introduction to R for road safety: an introduction to R and practical exercises","text":"Based saying ‚Äúdon‚Äôt run can walk‚Äù, ‚Äôve learned vital foundations R tackling real dataset. Temporal spatial attributes key road crash data, hence emphasis lubridate sf. Visualisation key understanding policy influence, tmap comes . solid foundations, plus knowledge ask help (read R‚Äôs internal help functions, ask colleagues, create new comments online forums/GitHub, generally order priority), ready test methods real data. , take read stats19 vignette, can launched follows: now sufficient tackle following exercises: Download plot crashes reported Great Britain 2018 (hint: see stats19 vignette) Find function stats19 package converts data.frame object sf data frame. Use function convert road crashes sf object, called crashes_sf, example. Filter crashes happened Isle Wight based attribute data (hint: relevant column contains word local) Filter crashes happened Isle Wight using geographic subsetting (hint: remember st_crs()?) Bonus: type subsetting yielded results ? Bonus: many crashes happened zone? Create new column called month crash data using function lubridate::month() date column. Create object called a_zones_may representing crashes happened Isle Wight month May Bonus: Calculate average (mean) speed limit associated crash happened May across zones Isle Wight (result shown map)","code":"vignette(package = \"stats19\") # view all vignettes available on stats19 vignette(\"stats19\") # view the introductory vignette"},{"path":"https://docs.ropensci.org/stats19/articles/stats19-training.html","id":"analysing-crash-data-on-road-networks","dir":"Articles","previous_headings":"","what":"Analysing crash data on road networks","title":"Introduction to R for road safety: an introduction to R and practical exercises","text":"Road network data can accessed range sources, including OpenStreetMap (OSM) Ordnance Survey. use OSM data Ilse Wight, can loaded follows: already road crashes Isle Wight previous stage. , load crash data follows: Plot roads crashes overlaid. Create buffer around roads distance 200 m. many crashes fall outside buffered roads? Bonus: Use aggregate() function identify many crashes happened per segment plot result (hint: see ?aggregate.sf take read Section 4.2.5 Geocomputation R) tmap plot crashes happened outside road buffers top.","code":"u = \"https://github.com/ropensci/stats19/releases/download/1.1.0/roads_key.Rds\" roads_wgs = readRDS(url(u)) roads = roads_wgs %>% st_transform(crs = 27700) u = \"https://github.com/ropensci/stats19/releases/download/1.1.0/car_collisions_2022_iow.Rds\" crashes_iow = readRDS(url(u))"},{"path":"https://docs.ropensci.org/stats19/articles/stats19-training.html","id":"bonus-exercises","dir":"Articles","previous_headings":"","what":"Bonus exercises","title":"Introduction to R for road safety: an introduction to R and practical exercises","text":"Identify region zonal units interest https://geoportal.statistics.gov.uk/ object police_boundaries stats19 package. Read R sf object Create map showing number crashes zone Identify average speed limit associated crashes zone Identify interesting question can ask data use exploratory data analysis find answers Check another related project information smoothing techniques counts linear network.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/stats19/articles/stats19-vehicles.html","id":"vehicle-level-variables-in-the-stats19-datasets","dir":"Articles","previous_headings":"","what":"Vehicle level variables in the STATS19 datasets","title":"Researching vehicles involved in collisions with STATS19 data","text":"three dataset types STATS19, vehicle tables perhaps revealing yet -explored. look like : categorise vehicle types simplify subsequent results: variables potential interest road safety researchers. Let‚Äôs take look summaries : output shows vehicle type (wide range vehicles represented), age driver (young elderly drivers often seen risky), engine capacity populsion (related vehicle type size) age vehicle. addition factors appearing prior road safety research debate, also things policy makers can influence, e.g : Encouraging modal shift away dangerous modes towards safer modes Incentivising people particular risk categories use safer modes Encouraging use certain (safer) kinds vehicle, e.g.¬†tax policies","code":"v = get_stats19(year = 2018, type = \"vehicle\") names(v) v v = v %>% mutate(vehicle_type2 = case_when(   grepl(pattern = \"motorcycle\", vehicle_type, ignore.case = TRUE) ~ \"Motorbike\",   grepl(pattern = \"Car\", vehicle_type, ignore.case = TRUE) ~ \"Car\",   grepl(pattern = \"Bus\", vehicle_type, ignore.case = TRUE) ~ \"Bus\",   grepl(pattern = \"cycle\", vehicle_type, ignore.case = TRUE) ~ \"Cycle\",   # grepl(pattern = \"Van\", vehicle_type, ignore.case = TRUE) ~ \"Van\",   grepl(pattern = \"Goods\", vehicle_type, ignore.case = TRUE) ~ \"Goods\",      TRUE ~ \"Other\" )) # barplot(table(v$vehicle_type2)) table(v$vehicle_type2) summary(v$age_of_driver) summary(v$engine_capacity_cc) table(v$propulsion_code) summary(v$age_of_vehicle)"},{"path":"https://docs.ropensci.org/stats19/articles/stats19-vehicles.html","id":"relationships-between-vehicle-type-and-crash-severity","dir":"Articles","previous_headings":"","what":"Relationships between vehicle type and crash severity","title":"Researching vehicles involved in collisions with STATS19 data","text":"explore relationship vehicles crash severity, must first join ‚Äòaccidents‚Äô table: Now additional variables available us: Let‚Äôs see crash severity relates variables interest mentioned : expected, crashes involving large vehicles buses good vehicles tend serious (involve proportionally deaths) crashes involving smaller vehicles. focus cars, can filter va table follows: best proxy car type open STATS19 data (non-open versions data additional columns) engine capacity, measured cubic centimetres (cc). distribution engine cc‚Äôs cars dataset created shown . output shows impossible values data, likely due recording error. cars engine capacity 5 litres (5000 cc) can confident none engine capacity 300 cc. ‚Äôll identify records remove follows: set anomolous vehicle size data NA meaning used subsequent analysis.","code":"a = get_stats19(year = 2018, type = collision) va = dplyr::inner_join(v, a) dim(v) dim(va) names(va) xtabs(~vehicle_type2 + accident_severity, data = va) %>% prop.table() xtabs(~vehicle_type2 + accident_severity, data = va) %>% prop.table() %>% plot() vac = va %>% filter(vehicle_type2 == \"Car\") summary(vac$engine_capacity_cc)"},{"path":"https://docs.ropensci.org/stats19/articles/stats19.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Introducing stats19","text":"stats19 enables access processing Great Britain‚Äôs official road traffic casualty database, STATS19. description variables database can found document provided UK‚Äôs Department Transport (DfT). datasets collectively called STATS19 form used report , can found . vignette focuses use stats19 package work STATS19 data. Note: Department Transport used refer ‚Äòaccidents‚Äô, ‚Äúcrashes‚Äù may appropriate term, emphasised ‚Äúcrash accident‚Äù arguments road safety advocacy groups RoadPeace. use term collision reference nomenclature within data provided. development version hosted GitHub can installed loaded follows:","code":"# from CRAN install.packages(\"stats19\") # you can install the latest development (discoraged) using: remotes::install_github(\"ITSLeeds/stats19\") library(stats19) #> Data provided under OGL v3.0. Cite the source and link to: #> www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"},{"path":"https://docs.ropensci.org/stats19/articles/stats19.html","id":"functions","dir":"Articles","previous_headings":"","what":"Functions","title":"Introducing stats19","text":"easiest way get STATS19 data get_stats19(). function takes 2 main arguments, year type. year can year 1979 202x x current year minus one two due delay publishing STATS19 statistics. type can one accidents, casualties vehicles, described . get_stats19() performs 3 jobs, corresponding three main types functions: Download: dl_stats19() function accepts year, type filename arguments make easy find right file download . Read: STATS19 data provided particular format benefits read-pre-specified column types. taken care read_*() functions providing access 3 main tables STATS19 data: read_collisions() reads-crash data (one row per incident) read_casualties() reads-casualty data (one row per person injured killed) read_vehicles() reads-vehicles table, contains information vehicles involved crashes (one row per vehicle) Format: corresponding format_*() functions read_*() functions. exported convenience, two sets functions closely related, also format parameter read_*() functions, default TRUE, adds labels tables. raw data provided DfT contains integers. Running read_*(..., format = TRUE) converts integer values corresponding character variables three tables. example, read_collisions(format = TRUE) converts values accident_severity column 1, 2 3 Slight, Serious Fatal using fromat_collisions() function. read-raw data without formatting, set format = FALSE. Multiple functions (read_* format_*) needed step structure STATS19 data, divided 3 tables: ‚Äúaccident circumstances, details location, severity, weather, etc.; casualties, referencing knowledge victims; vehicles, contains information vehicle type manoeuvres, well information driver.‚Äù Data files containing multiple years worth data can downloaded. Datasets since 1979 broadly consistent, meaning STATS19 data represents rich historic geographic record road casualties national level.","code":""},{"path":"https://docs.ropensci.org/stats19/articles/stats19.html","id":"download-stats19-data","dir":"Articles","previous_headings":"","what":"Download STATS19 data","title":"Introducing stats19","text":"stats19 enables download raw STATS19 data dl_* functions. following code chunk, example, downloads unzips .zip file containing STATS19 data 2022: Note previous command, ask = FALSE, meaning asked. default asked confirm, downloading large files. Currently, files downloaded default location tempdir platform independent ‚Äúsafe‚Äù temporary location download data . downloaded, unzipped original DfT file names. dl_stats19() function prints location final file name(s) unzipped files(s) shown . dl_stats19() takes three parameters. Supplying file_name interpreted mean user aware download two parameters ignored. can also use year type ‚Äúsearch‚Äù file names, stored lazy-loaded dataset called stats19::file_names. can find names files can downloaded names(stats19::file_names), example shown : see file_names created, see ?file_names. Data files years can selected interactively. Just providing year, example, presents user multiple options (file_names), illustrated : R running interactively, can select 3 matching files download: relating vehicles, casualties accidents 2022.","code":"dl_stats19(year = 2022, type = \"collision\", ask = FALSE) #> Files identified: dft-road-casualty-statistics-collision-2022.csv #>    https://data.dft.gov.uk/road-accidents-safety-data/dft-road-casualty-statistics-collision-2022.csv #> Attempt downloading from: https://data.dft.gov.uk/road-accidents-safety-data/dft-road-casualty-statistics-collision-2022.csv #> Data saved at /tmp/Rtmpmy5GdG/dft-road-casualty-statistics-collision-2022.csv #> NULL stats19::file_names$DigitalBreathTestData2013.zip #> NULL dl_stats19(year = 2022) Multiple matches. Which do you want to download?  1: dft-road-casualty-statistics-casualty-2022.csv 2: dft-road-casualty-statistics-vehicle-2022.csv 3: dft-road-casualty-statistics-accident-2022.csv  Selection:  Enter an item from the menu, or 0 to exit"},{"path":"https://docs.ropensci.org/stats19/articles/stats19.html","id":"read-stats19-data","dir":"Articles","previous_headings":"","what":"Read STATS19 data","title":"Introducing stats19","text":"similar approach download section , can read files downloaded using data_dir location file filename read. code download dftRoadSafetyData_Accidents_2022.zip file DfT servers read content. Files saved default tempdir(), can overridden ensure permanent storage user-defined location. stats19 imports data readr::read_csv() results ‚Äòtibble‚Äô object: data frame user-friendly printing features. three read_*() functions, corresponding three different classes data provided DfT: 1. read_collisions() 2. read_casualties() 3. read_vehicles() cases, default parameter read_*(format = TRUE) returns data formatted form, described . Data can also imported form directly provided DfT passing format = FALSE, subsequently formatted additional format_*() functions, described final section vignette. read_*() functions now described detail.","code":"crashes_2022_raw = get_stats19(year = 2022, type = \"collision\", format = FALSE) #> Files identified: dft-road-casualty-statistics-collision-2022.csv #>    https://data.dft.gov.uk/road-accidents-safety-data/dft-road-casualty-statistics-collision-2022.csv #> Data already exists in data_dir, not downloading #> Reading in: #> /tmp/Rtmpmy5GdG/dft-road-casualty-statistics-collision-2022.csv #> Rows: 106004 Columns: 36 #> ‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #> Delimiter: \",\" #> chr   (6): accident_index, accident_reference, date, local_authority_ons_dis... #> dbl  (29): accident_year, location_easting_osgr, location_northing_osgr, lon... #> time  (1): time #>  #> ‚Ñπ Use `spec()` to retrieve the full column specification for this data. #> ‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message. class(crashes_2022_raw) #> [1] \"spec_tbl_df\" \"tbl_df\"      \"tbl\"         \"data.frame\" dim(crashes_2022_raw) #> [1] 106004     36"},{"path":"https://docs.ropensci.org/stats19/articles/stats19.html","id":"crash-data","dir":"Articles","previous_headings":"Read STATS19 data","what":"Crash data","title":"Introducing stats19","text":"raw data files downloaded described previous section, can read-follows: just happened? read-data road crashes recorded police 2022 across Great Britain. dataset contains 32 columns (variables) 129,982 crashes. work done read_collisions(format = FALSE), imported ‚Äúraw‚Äù STATS19 data without cleaning messy column names re-categorising outputs. format_collisions() function automates process matching column names variable names labels .xls file provided DfT. means crashes_2022 much usable crashes_2022_raw, shown , shows key variables messy clean datasets: default, format = TRUE, meaning two stages read_collisions(format = FALSE) format_collisions() yield result read_collisions(format = TRUE). full list columns, run names(crashes_2022). Note: indicated , term collision used directly provided DfT; ‚Äúcrashes‚Äù appropriate term, hence call resultant datasets crashes_*.","code":"crashes_2022_raw = read_collisions(year = 2022, format = FALSE) #> Reading in: #> /tmp/Rtmpmy5GdG/dft-road-casualty-statistics-collision-2022.csv #> Rows: 106004 Columns: 36 #> ‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #> Delimiter: \",\" #> chr   (6): accident_index, accident_reference, date, local_authority_ons_dis... #> dbl  (29): accident_year, location_easting_osgr, location_northing_osgr, lon... #> time  (1): time #>  #> ‚Ñπ Use `spec()` to retrieve the full column specification for this data. #> ‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message. crashes_2022 = format_collisions(crashes_2022_raw) #> date and time columns present, creating formatted datetime column nrow(crashes_2022_raw) #> [1] 106004 ncol(crashes_2022_raw) #> [1] 36 nrow(crashes_2022) #> [1] 106004 ncol(crashes_2022) #> [1] 37 crashes_2022_raw[c(7, 18, 23, 25)] #> # A tibble: 106,004 √ó 4 #>    latitude first_road_class junction_control second_road_number #>       <dbl>            <dbl>            <dbl>              <dbl> #>  1     51.5                3                4                  0 #>  2     51.5                3                2                  0 #>  3     51.5                3                4                  0 #>  4     51.6                6               -1                 -1 #>  5     51.6                3                4                  0 #>  6     51.5                3                4                  0 #>  7     51.4                6                4                  0 #>  8     51.6                3               -1                 -1 #>  9     51.5                3                2                  0 #> 10     51.6                4                4                  0 #> # ‚Ñπ 105,994 more rows crashes_2022[c(7, 18, 23, 25)] #> # A tibble: 106,004 √ó 4 #>    latitude first_road_class junction_control             second_road_number     #>       <dbl> <chr>            <chr>                        <chr>                  #>  1     51.5 A                Give way or uncontrolled     first_road_class is C‚Ä¶ #>  2     51.5 A                Auto traffic signal          first_road_class is C‚Ä¶ #>  3     51.5 A                Give way or uncontrolled     first_road_class is C‚Ä¶ #>  4     51.6 Unclassified     Data missing or out of range Unknown                #>  5     51.6 A                Give way or uncontrolled     first_road_class is C‚Ä¶ #>  6     51.5 A                Give way or uncontrolled     first_road_class is C‚Ä¶ #>  7     51.4 Unclassified     Give way or uncontrolled     first_road_class is C‚Ä¶ #>  8     51.6 A                Data missing or out of range Unknown                #>  9     51.5 A                Auto traffic signal          first_road_class is C‚Ä¶ #> 10     51.6 B                Give way or uncontrolled     first_road_class is C‚Ä¶ #> # ‚Ñπ 105,994 more rows"},{"path":"https://docs.ropensci.org/stats19/articles/stats19.html","id":"format-stats19-data","dir":"Articles","previous_headings":"","what":"Format STATS19 data","title":"Introducing stats19","text":"also possible import ‚Äúraw‚Äù data provided DfT. .xls file provided DfT defines column names datasets provided. packaged datasets stats19_variables stats19_schema provide summary information contents data guide. contain full variable names guide (stats19_variables) complete look table relating integer values .csv files provided DfT labels (stats19_schema). first rows dataset shown : code generated small datasets can found help pages (accessed ?stats19_variables ?stats19_schema respectively). stats19_schema used internally automate process formatting downloaded .csv files. Column names formatted function format_column_names(), illustrated : Previous approaches data formatting STATS19 data involved hard-coding results. automated approach data cleaning consistent fail-safe. three functions: format_collisions(), format_vehicles() format_casualties() data formatting respective data frames, illustrated : package automates two-step read_* format_* process defaulting cases data_year = read_*(year, format = TRUE). read_* functions return, default, formatted data. two-step process may nevertheless important reference official nomenclature values provided DfT. summary outputs three tables shown . Summary formatted crash data. Summary formatted vehicles data. Summary formatted casualty data. testing purposes, sample accidents table provided package. columns two-row sample shown :","code":"stats19_variables #> # A tibble: 98 √ó 5 #>    table    variable                                    note   column_name type  #>    <chr>    <chr>                                       <chr>  <chr>       <chr> #>  1 Accident accident_index                              uniqu‚Ä¶ accident_i‚Ä¶ char‚Ä¶ #>  2 Accident accident_index                              uniqu‚Ä¶ accident_i‚Ä¶ char‚Ä¶ #>  3 Accident accident_index                              uniqu‚Ä¶ accident_i‚Ä¶ char‚Ä¶ #>  4 Accident accident_reference                          In ye‚Ä¶ accident_r‚Ä¶ char‚Ä¶ #>  5 Accident accident_severity                           NA     accident_s‚Ä¶ char‚Ä¶ #>  6 Accident accident_year                               NA     accident_y‚Ä¶ nume‚Ä¶ #>  7 Accident carriageway_hazards                         NA     carriagewa‚Ä¶ char‚Ä¶ #>  8 Accident date                                        NA     date        char‚Ä¶ #>  9 Accident day_of_week                                 NA     day_of_week char‚Ä¶ #> 10 Accident did_police_officer_attend_scene_of_accident NA     did_police‚Ä¶ char‚Ä¶ #> # ‚Ñπ 88 more rows stats19_schema #> # A tibble: 914 √ó 7 #>    table    variable     code  label              note  variable_formatted type  #>    <chr>    <chr>        <chr> <chr>              <chr> <chr>              <chr> #>  1 Accident police_force 1     Metropolitan Poli‚Ä¶ NA    police_force       char‚Ä¶ #>  2 Accident police_force 3     Cumbria            NA    police_force       char‚Ä¶ #>  3 Accident police_force 4     Lancashire         NA    police_force       char‚Ä¶ #>  4 Accident police_force 5     Merseyside         NA    police_force       char‚Ä¶ #>  5 Accident police_force 6     Greater Manchester NA    police_force       char‚Ä¶ #>  6 Accident police_force 7     Cheshire           NA    police_force       char‚Ä¶ #>  7 Accident police_force 10    Northumbria        NA    police_force       char‚Ä¶ #>  8 Accident police_force 11    Durham             NA    police_force       char‚Ä¶ #>  9 Accident police_force 12    North Yorkshire    NA    police_force       char‚Ä¶ #> 10 Accident police_force 13    West Yorkshire     NA    police_force       char‚Ä¶ #> # ‚Ñπ 904 more rows format_column_names(stats19_variables$variable[1:3]) #> [1] \"accident_index\" \"accident_index\" \"accident_index\" crashes_2022 = format_collisions(crashes_2022_raw) #> date and time columns present, creating formatted datetime column  # vehicle data for 2022 dl_stats19(year = 2022, type = \"vehicle\", ask = FALSE) #> Files identified: dft-road-casualty-statistics-vehicle-2022.csv #>    https://data.dft.gov.uk/road-accidents-safety-data/dft-road-casualty-statistics-vehicle-2022.csv #> Attempt downloading from: https://data.dft.gov.uk/road-accidents-safety-data/dft-road-casualty-statistics-vehicle-2022.csv #> Data saved at /tmp/Rtmpmy5GdG/dft-road-casualty-statistics-vehicle-2022.csv #> NULL vehicles_2022_raw = read_vehicles(year = 2022) #> Rows: 193545 Columns: 28 #> ‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #> Delimiter: \",\" #> chr  (4): accident_index, accident_reference, generic_make_model, lsoa_of_dr... #> dbl (24): accident_year, vehicle_reference, vehicle_type, towing_and_articul... #>  #> ‚Ñπ Use `spec()` to retrieve the full column specification for this data. #> ‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message. vehicles_2022 = format_vehicles(vehicles_2022_raw)  # casualties data for 2022 dl_stats19(year = 2022, type = \"casualty\", ask = FALSE) #> Files identified: dft-road-casualty-statistics-casualty-2022.csv #>  #>    https://data.dft.gov.uk/road-accidents-safety-data/dft-road-casualty-statistics-casualty-2022.csv #> Attempt downloading from: https://data.dft.gov.uk/road-accidents-safety-data/dft-road-casualty-statistics-casualty-2022.csv #> Data saved at /tmp/Rtmpmy5GdG/dft-road-casualty-statistics-casualty-2022.csv #> NULL casualties_2022 = read_casualties(year = 2022) #> Rows: 135480 Columns: 19 #> ‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #> Delimiter: \",\" #> chr  (3): accident_index, accident_reference, lsoa_of_casualty #> dbl (16): accident_year, vehicle_reference, casualty_reference, casualty_cla... #>  #> ‚Ñπ Use `spec()` to retrieve the full column specification for this data. #> ‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message. summarise_stats19 = function(x) {   data.frame(row.names = 1:length(x),     name = substr(names(x), 1, 19),     class = sapply(x, function(v) class(v)[1]),     n_unique = sapply(x, function(v) length(unique(v))),     first_label = sapply(x, function(v) substr(unique(v)[1], 1, 16)),     most_common_value = sapply(x, function(v)        substr(names(sort(table(v), decreasing = TRUE)[1]), 1, 16)[1])   ) } knitr::kable(summarise_stats19(crashes_2022),               caption = \"Summary of formatted crash data.\") knitr::kable(summarise_stats19(vehicles_2022),               caption = \"Summary of formatted vehicles data.\") knitr::kable(summarise_stats19(casualties_2022),               caption = \"Summary of formatted casualty data.\")"},{"path":"https://docs.ropensci.org/stats19/articles/stats19.html","id":"casualties-data","dir":"Articles","previous_headings":"","what":"Casualties data","title":"Introducing stats19","text":"crashes_2022, casualty data 2022 can downloaded, read-formatted follows: results show 170,993 casualties reported police STATS19 dataset 2022, 16 columns (variables). Values sample columns shown : full list column names casualties dataset :","code":"dl_stats19(year = 2022, type = \"casualty\", ask = FALSE) #> Files identified: dft-road-casualty-statistics-casualty-2022.csv #>    https://data.dft.gov.uk/road-accidents-safety-data/dft-road-casualty-statistics-casualty-2022.csv #> Data already exists in data_dir, not downloading casualties_2022 = read_casualties(year = 2022) #> Rows: 135480 Columns: 19 #> ‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #> Delimiter: \",\" #> chr  (3): accident_index, accident_reference, lsoa_of_casualty #> dbl (16): accident_year, vehicle_reference, casualty_reference, casualty_cla... #>  #> ‚Ñπ Use `spec()` to retrieve the full column specification for this data. #> ‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message. nrow(casualties_2022) #> [1] 135480 ncol(casualties_2022) #> [1] 19 casualties_2022[c(4, 5, 6, 14)] #> # A tibble: 135,480 √ó 4 #>    vehicle_reference casualty_reference casualty_class  bus_or_coach_passenger   #>                <dbl>              <dbl> <chr>           <chr>                    #>  1                 2                  1 Driver or rider Not a bus or coach pass‚Ä¶ #>  2                 1                  1 Driver or rider Not a bus or coach pass‚Ä¶ #>  3                 1                  1 Driver or rider Not a bus or coach pass‚Ä¶ #>  4                 1                  1 Driver or rider Not a bus or coach pass‚Ä¶ #>  5                 1                  2 Passenger       Not a bus or coach pass‚Ä¶ #>  6                 1                  1 Driver or rider Not a bus or coach pass‚Ä¶ #>  7                 2                  2 Driver or rider Not a bus or coach pass‚Ä¶ #>  8                 3                  3 Driver or rider Not a bus or coach pass‚Ä¶ #>  9                 1                  1 Driver or rider Not a bus or coach pass‚Ä¶ #> 10                 1                  2 Passenger       Not a bus or coach pass‚Ä¶ #> # ‚Ñπ 135,470 more rows names(casualties_2022) #>  [1] \"accident_index\"                     \"accident_year\"                      #>  [3] \"accident_reference\"                 \"vehicle_reference\"                  #>  [5] \"casualty_reference\"                 \"casualty_class\"                     #>  [7] \"sex_of_casualty\"                    \"age_of_casualty\"                    #>  [9] \"age_band_of_casualty\"               \"casualty_severity\"                  #> [11] \"pedestrian_location\"                \"pedestrian_movement\"                #> [13] \"car_passenger\"                      \"bus_or_coach_passenger\"             #> [15] \"pedestrian_road_maintenance_worker\" \"casualty_type\"                      #> [17] \"casualty_home_area_type\"            \"casualty_imd_decile\"                #> [19] \"lsoa_of_casualty\""},{"path":"https://docs.ropensci.org/stats19/articles/stats19.html","id":"vehicles-data","dir":"Articles","previous_headings":"","what":"Vehicles data","title":"Introducing stats19","text":"Data vehicles involved crashes 2022 can downloaded, read-formatted follows: results show 238,926 vehicles involved crashes reported police STATS19 dataset 2022, 23 columns (variables). Values sample columns shown : full list column names vehicles dataset :","code":"dl_stats19(year = 2022, type = \"vehicle\", ask = FALSE) #> Files identified: dft-road-casualty-statistics-vehicle-2022.csv #>    https://data.dft.gov.uk/road-accidents-safety-data/dft-road-casualty-statistics-vehicle-2022.csv #> Data already exists in data_dir, not downloading vehicles_2022 = read_vehicles(year = 2022) #> Rows: 193545 Columns: 28 #> ‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #> Delimiter: \",\" #> chr  (4): accident_index, accident_reference, generic_make_model, lsoa_of_dr... #> dbl (24): accident_year, vehicle_reference, vehicle_type, towing_and_articul... #>  #> ‚Ñπ Use `spec()` to retrieve the full column specification for this data. #> ‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message. nrow(vehicles_2022) #> [1] 193545 ncol(vehicles_2022) #> [1] 28 vehicles_2022[c(3, 14:16)] #> # A tibble: 193,545 √ó 4 #>    accident_reference vehicle_leaving_carriageway hit_object_off_carriageway  #>    <chr>              <chr>                       <chr>                       #>  1 010352073          Did not leave carriageway   None                        #>  2 010352073          Did not leave carriageway   None                        #>  3 010352573          Nearside                    Road sign or traffic signal #>  4 010352573          Did not leave carriageway   None                        #>  5 010352575          Did not leave carriageway   None                        #>  6 010352575          Did not leave carriageway   None                        #>  7 010352578          Did not leave carriageway   None                        #>  8 010352578          Did not leave carriageway   None                        #>  9 010352580          Did not leave carriageway   None                        #> 10 010352580          Did not leave carriageway   None                        #> # ‚Ñπ 193,535 more rows #> # ‚Ñπ 1 more variable: first_point_of_impact <chr> names(vehicles_2022) #>  [1] \"accident_index\"                   \"accident_year\"                    #>  [3] \"accident_reference\"               \"vehicle_reference\"                #>  [5] \"vehicle_type\"                     \"towing_and_articulation\"          #>  [7] \"vehicle_manoeuvre\"                \"vehicle_direction_from\"           #>  [9] \"vehicle_direction_to\"             \"vehicle_location_restricted_lane\" #> [11] \"junction_location\"                \"skidding_and_overturning\"         #> [13] \"hit_object_in_carriageway\"        \"vehicle_leaving_carriageway\"      #> [15] \"hit_object_off_carriageway\"       \"first_point_of_impact\"            #> [17] \"vehicle_left_hand_drive\"          \"journey_purpose_of_driver\"        #> [19] \"sex_of_driver\"                    \"age_of_driver\"                    #> [21] \"age_band_of_driver\"               \"engine_capacity_cc\"               #> [23] \"propulsion_code\"                  \"age_of_vehicle\"                   #> [25] \"generic_make_model\"               \"driver_imd_decile\"                #> [27] \"driver_home_area_type\"            \"lsoa_of_driver\""},{"path":"https://docs.ropensci.org/stats19/articles/stats19.html","id":"creating-geographic-crash-data","dir":"Articles","previous_headings":"","what":"Creating geographic crash data","title":"Introducing stats19","text":"important feature STATS19 data collision table contains geographic coordinates. provided ~10m resolution UK‚Äôs official coordinate reference system (Ordnance Survey National Grid, EPSG code 27700). stats19 converts non-geographic tables created format_collisions() geographic data form sf package function format_sf() follows: note arises NA values permitted sf coordinates, rows containing coordinates automatically removed. data standard geographic form allows various geographic operations performed . Spatial operations, spatial subsetting spatial aggregation, can performed, show relationship STATS19 data geographic objects, roads, schools administrative zones. example administrative zone dataset relevance STATS19 data boundaries police forces England, provided packaged dataset police_boundaries. following code chunk demonstrates kind spatial operations can performed geographic STATS19 data, counting plotting number fatalities per police force:  course, one draw conclusions analyses without care. case, denominators needed infer anything road safety police regions. suitable denominators included, performance metrics ‚Äòhealth risk‚Äô (fatalities per 100,000 people), ‚Äòtraffic risk‚Äô (fatalities per billion km, f/bkm) ‚Äòexposure risk‚Äô (fatalities per million hours, f/mh) can calculated (Feleke et al. 2018; Elvik et al. 2009). following code chunk, example, returns crashes within jurisdiction West Yorkshire Police: subsetting selected 4,371 crashes occurred West Yorkshire.","code":"crashes_sf = format_sf(crashes_2022) #> 22 rows removed with no coordinates library(sf) #> Linking to GEOS 3.10.2, GDAL 3.4.1, PROJ 8.2.1; sf_use_s2() is TRUE library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union crashes_sf %>%    filter(accident_severity == \"Fatal\") %>%    select(n_fatalities = accident_index) %>%    aggregate(by = police_boundaries, FUN = length) %>%    plot() #> old-style crs object detected; please recreate object with a recent sf::st_crs() #> old-style crs object detected; please recreate object with a recent sf::st_crs() #> old-style crs object detected; please recreate object with a recent sf::st_crs() #> old-style crs object detected; please recreate object with a recent sf::st_crs() #> old-style crs object detected; please recreate object with a recent sf::st_crs() #> old-style crs object detected; please recreate object with a recent sf::st_crs() #> old-style crs object detected; please recreate object with a recent sf::st_crs() #> old-style crs object detected; please recreate object with a recent sf::st_crs() #> old-style crs object detected; please recreate object with a recent sf::st_crs() west_yorkshire =   police_boundaries[police_boundaries$pfa16nm == \"West Yorkshire\", ] #> old-style crs object detected; please recreate object with a recent sf::st_crs() #> old-style crs object detected; please recreate object with a recent sf::st_crs() crashes_wy = crashes_sf[west_yorkshire, ] nrow(crashes_sf) #> [1] 105982 nrow(crashes_wy) #> [1] 4400"},{"path":"https://docs.ropensci.org/stats19/articles/stats19.html","id":"joining-tables","dir":"Articles","previous_headings":"","what":"Joining tables","title":"Introducing stats19","text":"three main tables just read-can joined shared key variables. demonstrated code chunk , subsets casualties took place West Yorkshire, counts number casualties severity crash: just happened? found subset casualties took place West Yorkshire reference accident_index variable. used dplyr function summarise(), find number people car, cycling, walking injured. new casualty dataset joined onto crashes_wy dataset. result spatial (sf) data frame crashes West Yorkshire, columns counting many road users different types hurt. joined data additional variables: simple spatial plot, can map crashes happened West Yorkshire 2022, colour related total number people hurt crash. Placing plot next map West Yorkshire provides context:  spatial distribution crashes West Yorkshire clearly relates region‚Äôs geography. Car crashes tend happen fast roads, including busy Motorway roads, displayed yellow . Cycling urban activity, bike crashes can found near Leeds city centre, comparatively high level cycling (compared low baseline 3%). can seen comparing previous map overview area, academic paper social, spatial temporal distribution bike crashes (Lovelace, Roberts, Kellar 2016):  addition Total number people hurt/killed, cj contains column type casualty (cyclist, car occupant, etc.), number corresponding number type hurt crash. also contains geometry column crashes_sf. words, joins allow casualties vehicles tables geo-referenced. can explore spatial distribution different casualty types. following figure, example, shows spatial distribution pedestrians car passengers hurt car crashes across West Yorkshire 2022: Spatial distribution serious fatal crashes West Yorkshire, cycling, walking, car passenger modes travel. Colour related speed limit crash happened (red faster) size proportional total number people hurt crash (legend shown). clear different types road users tend get hurt different places. Car occupant casualties (labelled ‚Äòpassengers‚Äô map ), example, comparatively common outskirts cities Leeds, speed limits tend higher comparatively higher volumes motor traffic. Casualties people foot tend happen city centres. say cities centres dangerous per unit distance (typically casualties per billion kilometres, bkm, unit used) walked: walking city centres (need denominator estimate risk). drill , can find spatial distribution pedestrian casualties, broken-seriousness casualty, light conditions. can done tidyvers functions follows:","code":"library(tidyr) library(dplyr) sel = casualties_2022$accident_index %in% crashes_wy$accident_index casualties_wy = casualties_2022[sel, ] cas_types = casualties_wy %>%    select(accident_index, casualty_type) %>%    group_by(accident_index) %>%    summarise(     Total = n(),     walking = sum(casualty_type == \"Pedestrian\"),     cycling = sum(casualty_type == \"Cyclist\"),     passenger = sum(casualty_type == \"Car occupant\")     )  cj = left_join(crashes_wy, cas_types) base::setdiff(names(cj), names(crashes_wy)) #> [1] \"Total\"     \"walking\"   \"cycling\"   \"passenger\" plot(   cj[cj$cycling > 0, \"speed_limit\", ],   cex = cj$Total[cj$cycling > 0] / 3,   main = \"Speed limit (cycling)\"   ) plot(   cj[cj$passenger > 0, \"speed_limit\", ],   cex = cj$Total[cj$passenger > 0] / 3,   main = \"Speed limit (passenger)\"   ) library(ggplot2) crashes_types = cj %>%    filter(accident_severity != \"Slight\") %>%    mutate(type = case_when(     walking > 0 ~ \"Walking\",     cycling > 0 ~ \"Cycling\",     passenger > 0 ~ \"Passenger\",     TRUE ~ \"Other\"   )) table(crashes_types$speed_limit) #>  #>  20  30  40  50  60  70  #> 100 848 155  30  75  63 ggplot(crashes_types, aes(size = Total, colour = speed_limit)) +   geom_sf(show.legend = \"point\", alpha = 0.3) +   facet_grid(vars(type), vars(accident_severity)) +   scale_size(     breaks = c(1:3, 12),     labels = c(1:2, \"3+\", 12)     ) +   scale_color_gradientn(colours = c(\"blue\", \"yellow\", \"red\")) +   theme(axis.text = element_blank(), axis.ticks = element_blank()) table(cj$light_conditions) #>  #> Darkness - lighting unknown       Darkness - lights lit  #>                          81                        1136  #>     Darkness - lights unlit      Darkness - no lighting  #>                          40                         117  #>                    Daylight  #>                        3026 cj %>%    filter(walking > 0) %>%    mutate(light = case_when(     light_conditions == \"Daylight\" ~ \"Daylight\",     light_conditions == \"Darkness - lights lit\" ~ \"Lit\",     TRUE ~ \"Other/Unlit\"   )) %>%    ggplot(aes(colour = speed_limit)) +   geom_sf() +   facet_grid(vars(light), vars(accident_severity)) +   scale_color_continuous(low = \"blue\", high = \"red\") +   theme(axis.text = element_blank(), axis.ticks = element_blank())"},{"path":"https://docs.ropensci.org/stats19/articles/stats19.html","id":"time-series-analysis","dir":"Articles","previous_headings":"","what":"Time series analysis","title":"Introducing stats19","text":"can also explore seasonal daily trends crashes aggregating crashes day year:  Different types crashes also tend happen different times day. illustrated plot , shows times day people travelling different modes commonly injured.  Note bike crashes tend distinct morning afternoon peaks, -line previous research (Lovelace, Roberts, Kellar 2016). disproportionate number car crashes appear happen afternoon.","code":"crashes_dates = cj %>%    st_set_geometry(NULL) %>%    group_by(date) %>%    summarise(     walking = sum(walking),     cycling = sum(cycling),     passenger = sum(passenger)     ) %>%    gather(mode, casualties, -date) ggplot(crashes_dates, aes(date, casualties)) +   geom_smooth(aes(colour = mode), method = \"loess\") +   ylab(\"Casualties per day\") #> `geom_smooth()` using formula = 'y ~ x' library(stringr)  crash_times = cj %>%    st_set_geometry(NULL) %>%    group_by(hour = as.numeric(str_sub(time, 1, 2))) %>%    summarise(     walking = sum(walking),     cycling = sum(cycling),     passenger = sum(passenger)     ) %>%    gather(mode, casualties, -hour)  ggplot(crash_times, aes(hour, casualties)) +   geom_line(aes(colour = mode))"},{"path":"https://docs.ropensci.org/stats19/articles/stats19.html","id":"further-work","dir":"Articles","previous_headings":"","what":"Further work","title":"Introducing stats19","text":"much potential extend package beyond downloading, reading formatting STATS19 data. greatest potential provide functions help analysis STATS19 data, help road safety research. Much academic research done using data, examples highlighted demonstrate wide potential work. Research exploring effectiveness road safety policies speed limits. example area paper 20 mph zones found areas 20mph speed limits safer. raises question: can result repeated using reproducible methods? finding hold recent 20 mph zones? recent finding Department Transport‚Äôs (2018) research, 20 mph zones alone reduce crash rates, supported reproducible analysis? factors make speed limits less effective (see sarkar_street_2018? example)? Research weather contributing factor road traffic casualties (e.g. Edwards 1998). raises question: matching crash data STATS19 data historic weather data R packages help advance knowledge area? Assessment crash rates normalised estimated exposure rates (risk). example type research author package found substantial spatial variation number cyclist casualties across West Yorkshire (Lovelace, Roberts, Kellar 2016). raises questions: similar spatial differences found regions? factors leading relatively high low rates different types crash? broader point stats19 package help road safety research, making open access data road crashes accessible researchers worldwide. easing data download cleaning stages research, also encourage reproducible analysis field. great potential add value gain insight data joining datasets open data, example Consumer Data Research Centre (CDRC, funded research), OpenStreetMap UK‚Äôs Ordnance Survey. suggestions priorities future directions (hopefully safe) travel, please get touch github.com/ITSLeeds/stats19/issues.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/stats19/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Robin Lovelace. Author, maintainer. Malcolm Morgan. Author. Layik Hama. Author. Mark Padgham. Author. David Ranzolin. Reviewer. Adam Sparks. Reviewer, contributor. Ivo Wengraf. Contributor. RAC Foundation. Funder.","code":""},{"path":"https://docs.ropensci.org/stats19/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lovelace, R., Morgan, M., Hama, L., Padgham, M., 2019. stats19: package working open road crash data. Journal Open Source Software. https://doi.org/10.21105/joss.01181","code":"@Article{,   author = {Robin Lovelace and Malcolm Morgan and Layik Hama and Mark Padgham and David Ranzolin and Adam Sparks},   title = {stats 19: A package for working with open road crash data},   doi = {10.21105/joss.01181},   year = {2019},   month = {jan},   publisher = {The Open Journal},   volume = {4},   number = {33},   pages = {1181},   journal = {The Journal of Open Source Software}, }"},{"path":"https://docs.ropensci.org/stats19/index.html","id":"stats19-","dir":"","previous_headings":"","what":"Work with Open Road Traffic Casualty Data from Great Britain","title":"Work with Open Road Traffic Casualty Data from Great Britain","text":"stats19 provides functions downloading formatting road crash data. Specifically, enables access UK‚Äôs official road traffic casualty database, STATS19. (name comes form used police record car crashes incidents resulting casualties roads.) full overview STATS19 variables found document provided UK‚Äôs Department Transport (DfT). raw data provided series .csv files contain integers stored dozens .zip files. Finding, reading-formatting data research can time consuming process subject human error. stats19 speeds vital boring error-prone stages research process single function: get_stats19(). allowing public access properly labelled road crash data, stats19 aims make road safety research reproducible accessible. transparency modularity, stage can undertaken separately, documented stats19 vignette. package now peer reviewed stable, published Journal Open Source Software (Lovelace et al.¬†2019). Please tell people package, link cite use work.","code":""},{"path":"https://docs.ropensci.org/stats19/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Work with Open Road Traffic Casualty Data from Great Britain","text":"Install load latest version : can install released version stats19 CRAN :","code":"remotes::install_github(\"ropensci/stats19\") library(stats19) #> Data provided under OGL v3.0. Cite the source and link to: #> www.nationalarchives.gov.uk/doc/open-government-licence/version/3/ install.packages(\"stats19\")"},{"path":"https://docs.ropensci.org/stats19/index.html","id":"get_stats19","dir":"","previous_headings":"","what":"get_stats19()","title":"Work with Open Road Traffic Casualty Data from Great Britain","text":"get_stats19() requires year type parameters, mirroring provision STATS19 data files, categorised year (1979 onward) type (separate tables crashes, casualties vehicles, outlined ). following command, example, gets crash data 2022 (note: follow ‚Äúcrash accident‚Äù campaign RoadPeace naming crashes, although DfT refers relevant tables ‚Äòaccidents‚Äô data): just happened? year 2022 read-crash-level (type = \"collision\") data road crashes recorded police across Great Britain. dataset contains 37 columns (variables) 106,004 crashes. asked download file (default asked confirm file downloaded). contents dataset, datasets provided stats19, outlined described detail stats19 vignette. see function also works get corresponding casualty vehicle datasets 2022. package also allows STATS19 files downloaded read-separately, allowing control download, subsequently read-, read_collisions(), read_casualties() read_vehicles(), described vignette.","code":"crashes = get_stats19(year = 2022, type = \"collision\") #> Files identified: dft-road-casualty-statistics-collision-2022.csv #>    https://data.dft.gov.uk/road-accidents-safety-data/dft-road-casualty-statistics-collision-2022.csv #> Data already exists in data_dir, not downloading #> Reading in: #> ~/data/stats19/dft-road-casualty-statistics-collision-2022.csv #> Rows: 106004 Columns: 36 #> ‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #> Delimiter: \",\" #> chr   (6): accident_index, accident_reference, date, local_authority_ons_dis... #> dbl  (29): accident_year, location_easting_osgr, location_northing_osgr, lon... #> time  (1): time #>  #> ‚Ñπ Use `spec()` to retrieve the full column specification for this data. #> ‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> date and time columns present, creating formatted datetime column"},{"path":"https://docs.ropensci.org/stats19/index.html","id":"data-download","dir":"","previous_headings":"","what":"Data download","title":"Work with Open Road Traffic Casualty Data from Great Britain","text":"Data files can downloaded without reading using function dl_stats19(). multiple matches, asked choose range options. Providing just year, example, result following options:","code":"dl_stats19(year = 2022, data_dir = tempdir()) Multiple matches. Which do you want to download?  1: dft-road-casualty-statistics-casualty-2022.csv 2: dft-road-casualty-statistics-vehicle-2022.csv 3: dft-road-casualty-statistics-collision-2022.csv  Selection:  Enter an item from the menu, or 0 to exit"},{"path":"https://docs.ropensci.org/stats19/index.html","id":"using-the-data","dir":"","previous_headings":"","what":"Using the data","title":"Work with Open Road Traffic Casualty Data from Great Britain","text":"STATS19 data consists 3 main tables: Accidents, main table contains information crash time, location variables (37 columns total) Casualties, containing data people hurt killed crash (19 columns total) Vehicles, containing data vehicles involved causing crash (28 columns total) contents outlined .","code":""},{"path":"https://docs.ropensci.org/stats19/index.html","id":"crash-data","dir":"","previous_headings":"Using the data","what":"Crash data","title":"Work with Open Road Traffic Casualty Data from Great Britain","text":"Crash data downloaded read-using function get_stats19(), described . key variables dataset include: full list columns, run names(crashes) see vignette.","code":"nrow(crashes) #> [1] 106004 ncol(crashes) #> [1] 37 key_column_names = grepl(pattern = \"severity|speed|pedestrian|light_conditions\", x = names(crashes)) crashes[key_column_names] #> # A tibble: 106,004 √ó 5 #>    accident_severity speed_limit pedestrian_crossing_hu‚Ä¶¬π pedestrian_crossing_‚Ä¶¬≤ #>    <chr>                   <dbl> <chr>                    <chr>                  #>  1 Slight                     30 None within 50 metres    No physical crossing ‚Ä¶ #>  2 Slight                     50 None within 50 metres    Pelican, puffin, touc‚Ä¶ #>  3 Slight                     30 None within 50 metres    No physical crossing ‚Ä¶ #>  4 Slight                     30 None within 50 metres    No physical crossing ‚Ä¶ #>  5 Slight                     50 None within 50 metres    No physical crossing ‚Ä¶ #>  6 Serious                    30 None within 50 metres    No physical crossing ‚Ä¶ #>  7 Slight                     30 None within 50 metres    No physical crossing ‚Ä¶ #>  8 Slight                     40 None within 50 metres    No physical crossing ‚Ä¶ #>  9 Slight                     30 None within 50 metres    Pedestrian phase at t‚Ä¶ #> 10 Serious                    20 None within 50 metres    Zebra                  #> # ‚Ñπ 105,994 more rows #> # ‚Ñπ abbreviated names: ¬π‚Äãpedestrian_crossing_human_control, #> #   ¬≤‚Äãpedestrian_crossing_physical_facilities #> # ‚Ñπ 1 more variable: light_conditions <chr>"},{"path":"https://docs.ropensci.org/stats19/index.html","id":"casualties-data","dir":"","previous_headings":"Using the data","what":"Casualties data","title":"Work with Open Road Traffic Casualty Data from Great Britain","text":"crashes, casualty data 2022 can downloaded, read-formatted follows: results show 135,480 casualties reported police STATS19 dataset 2022, 19 columns (variables). Values sample columns shown : full list column names casualties dataset :","code":"casualties = get_stats19(year = 2022, type = \"casualty\", ask = FALSE, format = TRUE) #> Files identified: dft-road-casualty-statistics-casualty-2022.csv #>    https://data.dft.gov.uk/road-accidents-safety-data/dft-road-casualty-statistics-casualty-2022.csv #> Data already exists in data_dir, not downloading #> Rows: 135480 Columns: 19 #> ‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #> Delimiter: \",\" #> chr  (3): accident_index, accident_reference, lsoa_of_casualty #> dbl (16): accident_year, vehicle_reference, casualty_reference, casualty_cla... #>  #> ‚Ñπ Use `spec()` to retrieve the full column specification for this data. #> ‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message. nrow(casualties) #> [1] 135480 ncol(casualties) #> [1] 19 casualties[c(4, 5, 6, 14)] #> # A tibble: 135,480 √ó 4 #>    vehicle_reference casualty_reference casualty_class  bus_or_coach_passenger   #>                <dbl>              <dbl> <chr>           <chr>                    #>  1                 2                  1 Driver or rider Not a bus or coach pass‚Ä¶ #>  2                 1                  1 Driver or rider Not a bus or coach pass‚Ä¶ #>  3                 1                  1 Driver or rider Not a bus or coach pass‚Ä¶ #>  4                 1                  1 Driver or rider Not a bus or coach pass‚Ä¶ #>  5                 1                  2 Passenger       Not a bus or coach pass‚Ä¶ #>  6                 1                  1 Driver or rider Not a bus or coach pass‚Ä¶ #>  7                 2                  2 Driver or rider Not a bus or coach pass‚Ä¶ #>  8                 3                  3 Driver or rider Not a bus or coach pass‚Ä¶ #>  9                 1                  1 Driver or rider Not a bus or coach pass‚Ä¶ #> 10                 1                  2 Passenger       Not a bus or coach pass‚Ä¶ #> # ‚Ñπ 135,470 more rows names(casualties) #>  [1] \"accident_index\"                     \"accident_year\"                      #>  [3] \"accident_reference\"                 \"vehicle_reference\"                  #>  [5] \"casualty_reference\"                 \"casualty_class\"                     #>  [7] \"sex_of_casualty\"                    \"age_of_casualty\"                    #>  [9] \"age_band_of_casualty\"               \"casualty_severity\"                  #> [11] \"pedestrian_location\"                \"pedestrian_movement\"                #> [13] \"car_passenger\"                      \"bus_or_coach_passenger\"             #> [15] \"pedestrian_road_maintenance_worker\" \"casualty_type\"                      #> [17] \"casualty_home_area_type\"            \"casualty_imd_decile\"                #> [19] \"lsoa_of_casualty\""},{"path":"https://docs.ropensci.org/stats19/index.html","id":"vehicles-data","dir":"","previous_headings":"Using the data","what":"Vehicles data","title":"Work with Open Road Traffic Casualty Data from Great Britain","text":"Data vehicles involved crashes 2022 can downloaded, read-formatted follows: results show 193,545 vehicles involved crashes reported police STATS19 dataset 2022, 28 columns (variables). Values sample columns shown : full list column names vehicles dataset :","code":"vehicles = get_stats19(year = 2022, type = \"vehicle\", ask = FALSE, format = TRUE) #> Files identified: dft-road-casualty-statistics-vehicle-2022.csv #>    https://data.dft.gov.uk/road-accidents-safety-data/dft-road-casualty-statistics-vehicle-2022.csv #> Data already exists in data_dir, not downloading #> Rows: 193545 Columns: 28 #> ‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #> Delimiter: \",\" #> chr  (4): accident_index, accident_reference, generic_make_model, lsoa_of_dr... #> dbl (24): accident_year, vehicle_reference, vehicle_type, towing_and_articul... #>  #> ‚Ñπ Use `spec()` to retrieve the full column specification for this data. #> ‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message. nrow(vehicles) #> [1] 193545 ncol(vehicles) #> [1] 28 vehicles[c(3, 14:16)] #> # A tibble: 193,545 √ó 4 #>    accident_reference vehicle_leaving_carriageway hit_object_off_carriageway  #>    <chr>              <chr>                       <chr>                       #>  1 010352073          Did not leave carriageway   None                        #>  2 010352073          Did not leave carriageway   None                        #>  3 010352573          Nearside                    Road sign or traffic signal #>  4 010352573          Did not leave carriageway   None                        #>  5 010352575          Did not leave carriageway   None                        #>  6 010352575          Did not leave carriageway   None                        #>  7 010352578          Did not leave carriageway   None                        #>  8 010352578          Did not leave carriageway   None                        #>  9 010352580          Did not leave carriageway   None                        #> 10 010352580          Did not leave carriageway   None                        #> # ‚Ñπ 193,535 more rows #> # ‚Ñπ 1 more variable: first_point_of_impact <chr> names(vehicles) #>  [1] \"accident_index\"                   \"accident_year\"                    #>  [3] \"accident_reference\"               \"vehicle_reference\"                #>  [5] \"vehicle_type\"                     \"towing_and_articulation\"          #>  [7] \"vehicle_manoeuvre\"                \"vehicle_direction_from\"           #>  [9] \"vehicle_direction_to\"             \"vehicle_location_restricted_lane\" #> [11] \"junction_location\"                \"skidding_and_overturning\"         #> [13] \"hit_object_in_carriageway\"        \"vehicle_leaving_carriageway\"      #> [15] \"hit_object_off_carriageway\"       \"first_point_of_impact\"            #> [17] \"vehicle_left_hand_drive\"          \"journey_purpose_of_driver\"        #> [19] \"sex_of_driver\"                    \"age_of_driver\"                    #> [21] \"age_band_of_driver\"               \"engine_capacity_cc\"               #> [23] \"propulsion_code\"                  \"age_of_vehicle\"                   #> [25] \"generic_make_model\"               \"driver_imd_decile\"                #> [27] \"driver_home_area_type\"            \"lsoa_of_driver\""},{"path":"https://docs.ropensci.org/stats19/index.html","id":"creating-geographic-crash-data","dir":"","previous_headings":"","what":"Creating geographic crash data","title":"Work with Open Road Traffic Casualty Data from Great Britain","text":"important feature STATS19 data collision table contains geographic coordinates. provided ~10m resolution UK‚Äôs official coordinate reference system (Ordnance Survey National Grid, EPSG code 27700). stats19 converts non-geographic tables created format_collisions() geographic data form sf package function format_sf() follows: note arises NA values permitted sf coordinates, rows containing coordinates automatically removed. data standard geographic form allows various geographic operations performed . following code chunk, example, returns crashes within boundary West Yorkshire (contained object police_boundaries, sf data frame containing police jurisdictions England Wales). subsetting selected 4,400 crashes occurred within West Yorkshire 2022.","code":"crashes_sf = format_sf(crashes) #> 22 rows removed with no coordinates library(sf) #> Linking to GEOS 3.11.1, GDAL 3.6.4, PROJ 9.1.1; sf_use_s2() is TRUE library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union wy = filter(police_boundaries, pfa16nm == \"West Yorkshire\") #> old-style crs object detected; please recreate object with a recent sf::st_crs() crashes_wy = crashes_sf[wy, ] nrow(crashes_sf) #> [1] 105982 nrow(crashes_wy) #> [1] 4400"},{"path":"https://docs.ropensci.org/stats19/index.html","id":"joining-tables","dir":"","previous_headings":"","what":"Joining tables","title":"Work with Open Road Traffic Casualty Data from Great Britain","text":"three main tables just read-can joined shared key variables. demonstrated code chunk , subsets casualties took place Leeds, counts number casualties severity crash: just happened? found subset casualties took place West Yorkshire reference accident_index variable. used functions tidyverse package dplyr (spread() tidyr) create dataset column casualty type. joined updated casualty data onto crashes_wy dataset. result spatial (sf) data frame crashes Leeds, columns counting many road users different types hurt. original joined data look like :","code":"sel = casualties$accident_index %in% crashes_wy$accident_index casualties_wy = casualties[sel, ] names(casualties_wy) #>  [1] \"accident_index\"                     \"accident_year\"                      #>  [3] \"accident_reference\"                 \"vehicle_reference\"                  #>  [5] \"casualty_reference\"                 \"casualty_class\"                     #>  [7] \"sex_of_casualty\"                    \"age_of_casualty\"                    #>  [9] \"age_band_of_casualty\"               \"casualty_severity\"                  #> [11] \"pedestrian_location\"                \"pedestrian_movement\"                #> [13] \"car_passenger\"                      \"bus_or_coach_passenger\"             #> [15] \"pedestrian_road_maintenance_worker\" \"casualty_type\"                      #> [17] \"casualty_home_area_type\"            \"casualty_imd_decile\"                #> [19] \"lsoa_of_casualty\" cas_types = casualties_wy %>%   select(accident_index, casualty_type) %>%   mutate(n = 1) %>%   group_by(accident_index, casualty_type) %>%   summarise(n = sum(n)) %>%   tidyr::spread(casualty_type, n, fill = 0) cas_types$Total = rowSums(cas_types[-1]) cj = left_join(crashes_wy, cas_types, by = \"accident_index\") crashes_wy %>%   select(accident_index, accident_severity) %>%    st_drop_geometry() #> # A tibble: 4,400 √ó 2 #>    accident_index accident_severity #>  * <chr>          <chr>             #>  1 2022121205585  Slight            #>  2 2022131127664  Slight            #>  3 2022131127681  Serious           #>  4 2022131127764  Serious           #>  5 2022131127766  Slight            #>  6 2022131127829  Slight            #>  7 2022131127841  Serious           #>  8 2022131127847  Slight            #>  9 2022131127861  Slight            #> 10 2022131127881  Slight            #> # ‚Ñπ 4,390 more rows cas_types[1:2, c(\"accident_index\", \"Cyclist\")] #> # A tibble: 2 √ó 2 #> # Groups:   accident_index [2] #>   accident_index Cyclist #>   <chr>            <dbl> #> 1 2022121205585        0 #> 2 2022131127664        0 cj[1:2, c(1, 5, 34)] %>% st_drop_geometry() #> # A tibble: 2 √ó 3 #>   accident_index latitude lsoa_of_accident_location #> * <chr>             <dbl> <chr>                     #> 1 2022121205585      53.8 E01027904                 #> 2 2022131127664      53.7 E01011132"},{"path":"https://docs.ropensci.org/stats19/index.html","id":"mapping-crashes","dir":"","previous_headings":"","what":"Mapping crashes","title":"Work with Open Road Traffic Casualty Data from Great Britain","text":"join operation added geometry column casualty data, enabling mapped (advanced maps, see vignette):  spatial distribution crashes West Yorkshire clearly relates region‚Äôs geography. Crashes tend happen busy Motorway roads (high speed limit, 70 miles per hour, shown map ) city centres, Leeds Bradford particular. severity number people hurt (proportional circle width map ) crashes related speed limit. STATS19 data can used basis road safety research. map , example, shows results academic paper social, spatial temporal distribution bike crashes West Yorkshire, estimated number crashes per billion km cycled based commuter cycling proxy cycling levels overall (sophisticated measures cycling levels now possible thanks new data sources) (Lovelace, Roberts, Kellar 2016):","code":"cex = cj$Total / 3 plot(cj[\"speed_limit\"], cex = cex)"},{"path":"https://docs.ropensci.org/stats19/index.html","id":"time-series-analysis","dir":"","previous_headings":"","what":"Time series analysis","title":"Work with Open Road Traffic Casualty Data from Great Britain","text":"can also explore seasonal trends crashes aggregating crashes day year:  Different types crashes also tend happen different times day. illustrated plot , shows times day people travelling different modes commonly injured.  Note cycling manifests distinct morning afternoon peaks (see Lovelace, Roberts, Kellar 2016 ).","code":"library(ggplot2) head(cj$date) #> [1] \"2022-08-03\" \"2022-01-01\" \"2022-01-01\" \"2022-01-01\" \"2022-01-01\" #> [6] \"2022-01-01\" class(cj$date) #> [1] \"Date\" crashes_dates = cj %>%    st_set_geometry(NULL) %>%    group_by(date) %>%    summarise(     walking = sum(Pedestrian),     cycling = sum(Cyclist),     passenger = sum(`Car occupant`)     ) %>%    tidyr::gather(mode, casualties, -date) ggplot(crashes_dates, aes(date, casualties)) +   geom_smooth(aes(colour = mode), method = \"loess\") +   ylab(\"Casualties per day\") #> `geom_smooth()` using formula = 'y ~ x' library(stringr)  crash_times = cj %>%    st_set_geometry(NULL) %>%    group_by(hour = as.numeric(str_sub(time, 1, 2))) %>%    summarise(     walking = sum(Pedestrian),     cycling = sum(Cyclist),     passenger = sum(`Car occupant`)     ) %>%    tidyr::gather(mode, casualties, -hour)  ggplot(crash_times, aes(hour, casualties)) +   geom_line(aes(colour = mode))"},{"path":"https://docs.ropensci.org/stats19/index.html","id":"usage-in-research-and-policy-contexts","dir":"","previous_headings":"","what":"Usage in research and policy contexts","title":"Work with Open Road Traffic Casualty Data from Great Britain","text":"Examples package can used policy making include: Use package web app created library service UK Parliament. See commonslibrary.parliament.uk, screenshots December 2019 shown , details.  Use methods taught stats19-training vignette road safety analysts Essex Highways Safer Essex Roads Partnership (SERP) inform deployment proactive front-line police enforcement region (credit: Cubbin). Mention road crash data analysis based package article urban SUVs. question vehicle size type relates road safety important area future research. starting point researching topic can found stats19-vehicles vignette, representing possible next step terms data can used.","code":""},{"path":"https://docs.ropensci.org/stats19/index.html","id":"next-steps","dir":"","previous_headings":"","what":"Next steps","title":"Work with Open Road Traffic Casualty Data from Great Britain","text":"much important research needs done help make transport systems many cities safer. Even ‚Äôre working UK data, hope data provided stats19 data can help safety researchers develop new methods better understand reasons people needlessly hurt killed roads. next step gain deeper understanding stats19 data provides. ‚Äôs time pose interesting research questions, provide evidence-base support policies save lives. next steps, see package‚Äôs introductory vignette.","code":""},{"path":"https://docs.ropensci.org/stats19/index.html","id":"further-information","dir":"","previous_headings":"","what":"Further information","title":"Work with Open Road Traffic Casualty Data from Great Britain","text":"stats19 package builds previous work, including: code bikeR repo underlying academic paper collisions involving cyclists functions stplanr downloading Stats19 data updated functions related CyIPT project","code":""},{"path":[]},{"path":"https://docs.ropensci.org/stats19/paper.html","id":null,"dir":"","previous_headings":"","what":"Summary","title":"Summary","text":"stats19 provides functions downloading formatting road crash data. Specifically, enables access UK‚Äôs official road traffic casualty database, STATS19 (name comes form used police record car crashes incidents resulting casualties roads). Finding, reading-formatting data research can time consuming process subject human error, leading previous (incomplete) attempts facilitate processes open source software [@lovelace_stplanr_Inpress]. stats19 speeds-data access cleaning stages streamlining work 3 stages: Download data, year, type /filename. interactive menu options provided multiple matches particular year. Read data appropriate formatting columns. Format data labels added raw integer values column. Functions stage named dl_stats19(), read_*() format_*(), * representing type data read-: STATS19 data consists accidents, casualties vehicles tables, correspond incident records, people injured killed, vehicles involved, respectively. package needed currently downloading formatting STATS19 data time-consuming error-prone process. abstracting process fundamental steps (download, read, format), package makes easy get data appropriate formats (classes tbl, data.frame sf), ready processing analysis steps. developed package road safety research, building clear need reproducibility field [@lovelace_who_2016] importance geo-location STATS19 data assessing effectiveness interventions aimed make roads safer save lives [@sarkar_street_2018]. useful feature package enables creation geographic representations data, geo-referenced correct coordinate reference system, single function call (format_sf()). package use interest road safety data analysts working local authority national levels UK. datasets generated also interest academics educators open, reproducible basis analysing large point pattern data underlying route network, teaching geography, transport road safety courses.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/stats19/reference/accidents_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample of stats19 data (2022 collisions) ‚Äî accidents_sample","title":"Sample of stats19 data (2022 collisions) ‚Äî accidents_sample","text":"Sample stats19 data (2022 collisions)","code":""},{"path":"https://docs.ropensci.org/stats19/reference/accidents_sample.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample of stats19 data (2022 collisions) ‚Äî accidents_sample","text":"data frame","code":""},{"path":"https://docs.ropensci.org/stats19/reference/accidents_sample.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Sample of stats19 data (2022 collisions) ‚Äî accidents_sample","text":"generated using script data-raw directory (misc.Rmd file).","code":""},{"path":"https://docs.ropensci.org/stats19/reference/accidents_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample of stats19 data (2022 collisions) ‚Äî accidents_sample","text":"","code":"# \\donttest{ nrow(accidents_sample_raw) #> [1] 3 accidents_sample_raw #> # A tibble: 3 √ó 37 #>   accident_index accident_year accident_reference location_easting_osgr #>   <chr>                  <dbl> <chr>                              <dbl> #> 1 2022010383503           2022 010383503                         509825 #> 2 2022461254259           2022 461254259                         575966 #> 3 2022501244628           2022 501244628                         158521 #> # ‚Ñπ 33 more variables: location_northing_osgr <dbl>, longitude <dbl>, #> #   latitude <dbl>, police_force <chr>, accident_severity <chr>, #> #   number_of_vehicles <dbl>, number_of_casualties <dbl>, date <date>, #> #   day_of_week <chr>, time <hms>, local_authority_district <chr>, #> #   local_authority_ons_district <chr>, local_authority_highway <chr>, #> #   first_road_class <chr>, first_road_number <chr>, road_type <chr>, #> #   speed_limit <dbl>, junction_detail <chr>, junction_control <chr>, ‚Ä¶ # }"},{"path":"https://docs.ropensci.org/stats19/reference/casualties_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample of stats19 data (2022 casualties) ‚Äî casualties_sample","title":"Sample of stats19 data (2022 casualties) ‚Äî casualties_sample","text":"Sample stats19 data (2022 casualties)","code":""},{"path":"https://docs.ropensci.org/stats19/reference/casualties_sample.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample of stats19 data (2022 casualties) ‚Äî casualties_sample","text":"data frame","code":""},{"path":"https://docs.ropensci.org/stats19/reference/casualties_sample.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Sample of stats19 data (2022 casualties) ‚Äî casualties_sample","text":"generated using script data-raw directory (misc.Rmd file).","code":""},{"path":"https://docs.ropensci.org/stats19/reference/casualties_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample of stats19 data (2022 casualties) ‚Äî casualties_sample","text":"","code":"# \\donttest{ nrow(casualties_sample_raw) #> [1] 3 casualties_sample_raw #> # A tibble: 3 √ó 16 #>   Accident_Index Vehicle_Reference Casualty_Reference Casualty_Class #>   <chr>                      <int>              <int>          <int> #> 1 2017010048523                  1                  1              1 #> 2 2017010070898                  1                  1              3 #> 3 2017471705929                  1                  1              1 #> # ‚Ñπ 12 more variables: Sex_of_Casualty <int>, Age_of_Casualty <int>, #> #   Age_Band_of_Casualty <int>, Casualty_Severity <int>, #> #   Pedestrian_Location <int>, Pedestrian_Movement <int>, Car_Passenger <int>, #> #   Bus_or_Coach_Passenger <int>, Pedestrian_Road_Maintenance_Worker <int>, #> #   Casualty_Type <int>, Casualty_Home_Area_Type <int>, #> #   Casualty_IMD_Decile <int> # }"},{"path":"https://docs.ropensci.org/stats19/reference/check_input_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Local helper to be reused. ‚Äî check_input_file","title":"Local helper to be reused. ‚Äî check_input_file","text":"Local helper reused.","code":""},{"path":"https://docs.ropensci.org/stats19/reference/check_input_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Local helper to be reused. ‚Äî check_input_file","text":"","code":"check_input_file(filename = NULL, type = NULL, data_dir = NULL, year = NULL)"},{"path":"https://docs.ropensci.org/stats19/reference/check_input_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Local helper to be reused. ‚Äî check_input_file","text":"filename Character string filename .csv read, given, type years determine whether target read, otherwise disk scan needed. type type file downloaded (e.g. 'collisions', 'casualty' 'vehicles'). case sensitive searches using regular expressions ('acc' work). data_dir sets downloaded data found. year Single year data read","code":""},{"path":"https://docs.ropensci.org/stats19/reference/dl_stats19.html","id":null,"dir":"Reference","previous_headings":"","what":"Download STATS19 data for a year ‚Äî dl_stats19","title":"Download STATS19 data for a year ‚Äî dl_stats19","text":"Download STATS19 data year","code":""},{"path":"https://docs.ropensci.org/stats19/reference/dl_stats19.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download STATS19 data for a year ‚Äî dl_stats19","text":"","code":"dl_stats19(   year = NULL,   type = NULL,   data_dir = get_data_directory(),   file_name = NULL,   ask = FALSE,   silent = FALSE,   timeout = 600 )"},{"path":"https://docs.ropensci.org/stats19/reference/dl_stats19.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download STATS19 data for a year ‚Äî dl_stats19","text":"year year matching file names STATS19 data release page e.g. 2020 type One 'collision', 'casualty', 'Vehicle'; defaults 'collision'. text string used match file names released DfT. data_dir Parent directory downloaded files. Defaults tempdir(). file_name file name (DfT named) download. ask asked whether download files? TRUE default. silent Boolean. FALSE (default value), display useful progress messages screen. timeout Timeout seconds download current option less value. Defaults 600 (10 minutes).","code":""},{"path":"https://docs.ropensci.org/stats19/reference/dl_stats19.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download STATS19 data for a year ‚Äî dl_stats19","text":"function downloads unzips UK road crash data. results unzipped .csv files put temporary directory specified get_data_directory() provided data_dir. file downloaded specific year (e.g. 2022). also file containing data range two (e.g. 2005-2014). dl_* functions can download many MB data ensure sufficient internet access hard disk space.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/stats19/reference/dl_stats19.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download STATS19 data for a year ‚Äî dl_stats19","text":"","code":"# \\donttest{ if (curl::has_internet()) {   # type by default is collisions table   dl_stats19(year = 2022)   # with type as casualty   dl_stats19(year = 2022, type = \"casualty\")   # try another year   dl_stats19(year = 2018) } #> More than one file found, selecting the first. #> Files identified: dft-road-casualty-statistics-casualty-2022.csv #>    https://data.dft.gov.uk/road-accidents-safety-data/dft-road-casualty-statistics-casualty-2022.csv #> Attempt downloading from: https://data.dft.gov.uk/road-accidents-safety-data/dft-road-casualty-statistics-casualty-2022.csv #> Data saved at /tmp/Rtmpc4SGfV/dft-road-casualty-statistics-casualty-2022.csv #> Files identified: dft-road-casualty-statistics-casualty-2022.csv #>    https://data.dft.gov.uk/road-accidents-safety-data/dft-road-casualty-statistics-casualty-2022.csv #> Data already exists in data_dir, not downloading #> More than one file found, selecting the first. #> Files identified: dft-road-casualty-statistics-casualty-2018.csv #>    https://data.dft.gov.uk/road-accidents-safety-data/dft-road-casualty-statistics-casualty-2018.csv #> Attempt downloading from: https://data.dft.gov.uk/road-accidents-safety-data/dft-road-casualty-statistics-casualty-2018.csv #> Data saved at /tmp/Rtmpc4SGfV/dft-road-casualty-statistics-casualty-2018.csv #> NULL # }"},{"path":"https://docs.ropensci.org/stats19/reference/file_names.html","id":null,"dir":"Reference","previous_headings":"","what":"stats19 file names for easy access ‚Äî file_names","title":"stats19 file names for easy access ‚Äî file_names","text":"URL decoded file names. Currently 52 file names released DfT (Department Transport) details include obtained kept date.","code":""},{"path":"https://docs.ropensci.org/stats19/reference/file_names.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"stats19 file names for easy access ‚Äî file_names","text":"named list","code":""},{"path":"https://docs.ropensci.org/stats19/reference/file_names.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"stats19 file names for easy access ‚Äî file_names","text":"generated using script data-raw directory (misc.Rmd file).","code":""},{"path":"https://docs.ropensci.org/stats19/reference/file_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"stats19 file names for easy access ‚Äî file_names","text":"","code":"head(file_names) #> $`dft-road-casualty-statistics-casualty-adjustment-lookup_2004-latest-published-year.csv` #> [1] \"dft-road-casualty-statistics-casualty-adjustment-lookup_2004-latest-published-year.csv\" #>  #> $`dft-road-casualty-statistics-collision-adjustment-lookup_2004-latest-published-year.csv` #> [1] \"dft-road-casualty-statistics-collision-adjustment-lookup_2004-latest-published-year.csv\" #>  #> $`dft-road-casualty-statistics-vehicle-e-scooter-2020-Latest-Published-Year.csv` #> [1] \"dft-road-casualty-statistics-vehicle-e-scooter-2020-Latest-Published-Year.csv\" #>  #> $`dft-road-casualty-statistics-historical-revisions-data.csv` #> [1] \"dft-road-casualty-statistics-historical-revisions-data.csv\" #>  #> $`dft-road-casualty-statistics-casualty-2022.csv` #> [1] \"dft-road-casualty-statistics-casualty-2022.csv\" #>  #> $`dft-road-casualty-statistics-vehicle-2022.csv` #> [1] \"dft-road-casualty-statistics-vehicle-2022.csv\" #>"},{"path":"https://docs.ropensci.org/stats19/reference/find_file_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Find file names within stats19::file_names. ‚Äî find_file_name","title":"Find file names within stats19::file_names. ‚Äî find_file_name","text":"Currently, 52 file names download/read data .","code":""},{"path":"https://docs.ropensci.org/stats19/reference/find_file_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find file names within stats19::file_names. ‚Äî find_file_name","text":"","code":"find_file_name(years = NULL, type = NULL)"},{"path":"https://docs.ropensci.org/stats19/reference/find_file_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find file names within stats19::file_names. ‚Äî find_file_name","text":"years Year data found type One 'collisions', 'casualty' 'vehicles' ignores case.","code":""},{"path":"https://docs.ropensci.org/stats19/reference/find_file_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find file names within stats19::file_names. ‚Äî find_file_name","text":"","code":"find_file_name(2016) #> No files found. Check the stats19 website on data.gov.uk #> character(0) find_file_name(2016, type = \"collision\") #> No files of that type found for that year. #> No files found. Check the stats19 website on data.gov.uk #> character(0) find_file_name(1985, type = \"collision\") #> No files of that type found for that year. #> No files found. Check the stats19 website on data.gov.uk #> character(0) find_file_name(type = \"cas\") #> [1] \"dft-road-casualty-statistics-casualty-adjustment-lookup_2004-latest-published-year.csv\" #> [2] \"dft-road-casualty-statistics-casualty-2022.csv\"                                         #> [3] \"dft-road-casualty-statistics-casualty-1979-latest-published-year.csv\"                   #> [4] \"dft-road-casualty-statistics-casualty-2021.csv\"                                         #> [5] \"dft-road-casualty-statistics-casualty-2020.csv\"                                         #> [6] \"dft-road-casualty-statistics-casualty-2019.csv\"                                         #> [7] \"dft-road-casualty-statistics-casualty-2018.csv\"                                         #> [8] \"dft-road-casualty-statistics-casualty-last-5-years.csv\"                                 find_file_name(type = \"collision\") #> [1] \"dft-road-casualty-statistics-collision-adjustment-lookup_2004-latest-published-year.csv\" #> [2] \"dft-road-casualty-statistics-collision-2022.csv\"                                         #> [3] \"dft-road-casualty-statistics-collision-1979-latest-published-year.csv\"                   #> [4] \"dft-road-casualty-statistics-collision-2021.csv\"                                         #> [5] \"dft-road-casualty-statistics-collision-2020.csv\"                                         #> [6] \"dft-road-casualty-statistics-collision-2019.csv\"                                         #> [7] \"dft-road-casualty-statistics-collision-2018.csv\"                                         #> [8] \"dft-road-casualty-statistics-collision-last-5-years.csv\"                                 find_file_name(2016:2022) # warning when multiple years requested #> Warning: argument 'pattern' has length > 1 and only the first element will be used #> No files found. Check the stats19 website on data.gov.uk #> character(0)"},{"path":"https://docs.ropensci.org/stats19/reference/format_casualties.html","id":null,"dir":"Reference","previous_headings":"","what":"Format STATS19 casualties ‚Äî format_casualties","title":"Format STATS19 casualties ‚Äî format_casualties","text":"Format STATS19 casualties","code":""},{"path":"https://docs.ropensci.org/stats19/reference/format_casualties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format STATS19 casualties ‚Äî format_casualties","text":"","code":"format_casualties(x)"},{"path":"https://docs.ropensci.org/stats19/reference/format_casualties.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format STATS19 casualties ‚Äî format_casualties","text":"x Data frame created read_casualties()","code":""},{"path":"https://docs.ropensci.org/stats19/reference/format_casualties.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Format STATS19 casualties ‚Äî format_casualties","text":"function formats raw STATS19 data","code":""},{"path":"https://docs.ropensci.org/stats19/reference/format_casualties.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format STATS19 casualties ‚Äî format_casualties","text":"","code":"# \\donttest{ if(curl::has_internet()) { dl_stats19(year = 2022, type = \"casualty\") x = read_casualties(year = 2022) casualties = format_casualties(x) } #> Files identified: dft-road-casualty-statistics-casualty-2022.csv #>    https://data.dft.gov.uk/road-accidents-safety-data/dft-road-casualty-statistics-casualty-2022.csv #> Data already exists in data_dir, not downloading #> Rows: 135480 Columns: 19 #> ‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #> Delimiter: \",\" #> chr  (3): accident_index, accident_reference, lsoa_of_casualty #> dbl (16): accident_year, vehicle_reference, casualty_reference, casualty_cla... #>  #> ‚Ñπ Use `spec()` to retrieve the full column specification for this data. #> ‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message. # }"},{"path":"https://docs.ropensci.org/stats19/reference/format_collisions.html","id":null,"dir":"Reference","previous_headings":"","what":"Format STATS19 'collisions' data ‚Äî format_collisions","title":"Format STATS19 'collisions' data ‚Äî format_collisions","text":"Format STATS19 'collisions' data","code":""},{"path":"https://docs.ropensci.org/stats19/reference/format_collisions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format STATS19 'collisions' data ‚Äî format_collisions","text":"","code":"format_collisions(x)"},{"path":"https://docs.ropensci.org/stats19/reference/format_collisions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format STATS19 'collisions' data ‚Äî format_collisions","text":"x Data frame created read_collisions()","code":""},{"path":"https://docs.ropensci.org/stats19/reference/format_collisions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Format STATS19 'collisions' data ‚Äî format_collisions","text":"helper function format raw STATS19 data","code":""},{"path":"https://docs.ropensci.org/stats19/reference/format_collisions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format STATS19 'collisions' data ‚Äî format_collisions","text":"","code":"# \\donttest{ if(curl::has_internet()) { dl_stats19(year = 2022, type = \"collision\") x = read_collisions(year = 2022, format = FALSE) x = readr::read_csv(\"https://github.com/ropensci/stats19/releases/download/v3.0.0/fatalities.csv\") if(nrow(x) > 0) { x[1:3, 1:12] crashes = format_collisions(x) crashes[1:3, 1:12] summary(crashes$datetime) } } #> Files identified: dft-road-casualty-statistics-collision-2022.csv #>    https://data.dft.gov.uk/road-accidents-safety-data/dft-road-casualty-statistics-collision-2022.csv #> Attempt downloading from: https://data.dft.gov.uk/road-accidents-safety-data/dft-road-casualty-statistics-collision-2022.csv #> Data saved at /tmp/Rtmpc4SGfV/dft-road-casualty-statistics-collision-2022.csv #> Reading in:  #> /tmp/Rtmpc4SGfV/dft-road-casualty-statistics-collision-2022.csv #> Rows: 106004 Columns: 36 #> ‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #> Delimiter: \",\" #> chr   (6): accident_index, accident_reference, date, local_authority_ons_dis... #> dbl  (29): accident_year, location_easting_osgr, location_northing_osgr, lon... #> time  (1): time #>  #> ‚Ñπ Use `spec()` to retrieve the full column specification for this data. #> ‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 141698 Columns: 37 #> ‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #> Delimiter: \",\" #> chr  (30): accident_index, accident_reference, location_easting_osgr, locati... #> dbl   (4): accident_year, number_of_vehicles, number_of_casualties, speed_limit #> dttm  (1): datetime #> date  (1): date #> time  (1): time #>  #> ‚Ñπ Use `spec()` to retrieve the full column specification for this data. #> ‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> date and time columns present, creating formatted datetime column #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #>     Min.  1st Qu.   Median     Mean  3rd Qu.     Max.     NA's  #>       NA       NA       NA    \"NaN\"       NA       NA \"141698\"  # }"},{"path":"https://docs.ropensci.org/stats19/reference/format_column_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Format column names of raw STATS19 data ‚Äî format_column_names","title":"Format column names of raw STATS19 data ‚Äî format_column_names","text":"function takes messy column names returns clean ones work well R default. Names lower case R-unfriendly characters spaces - returned.","code":""},{"path":"https://docs.ropensci.org/stats19/reference/format_column_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format column names of raw STATS19 data ‚Äî format_column_names","text":"","code":"format_column_names(column_names)"},{"path":"https://docs.ropensci.org/stats19/reference/format_column_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format column names of raw STATS19 data ‚Äî format_column_names","text":"column_names Column names cleaned","code":""},{"path":"https://docs.ropensci.org/stats19/reference/format_column_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format column names of raw STATS19 data ‚Äî format_column_names","text":"Column names cleaned.","code":""},{"path":"https://docs.ropensci.org/stats19/reference/format_column_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format column names of raw STATS19 data ‚Äî format_column_names","text":"","code":"# \\donttest{ if(curl::has_internet()) { crashes_raw = read_collisions(year = 2022) column_names = names(crashes_raw) column_names format_column_names(column_names = column_names) } #> Reading in:  #> /tmp/Rtmpc4SGfV/dft-road-casualty-statistics-collision-2022.csv #> Rows: 106004 Columns: 36 #> ‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #> Delimiter: \",\" #> chr   (6): accident_index, accident_reference, date, local_authority_ons_dis... #> dbl  (29): accident_year, location_easting_osgr, location_northing_osgr, lon... #> time  (1): time #>  #> ‚Ñπ Use `spec()` to retrieve the full column specification for this data. #> ‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> date and time columns present, creating formatted datetime column #>  [1] \"accident_index\"                              #>  [2] \"accident_year\"                               #>  [3] \"accident_reference\"                          #>  [4] \"location_easting_osgr\"                       #>  [5] \"location_northing_osgr\"                      #>  [6] \"longitude\"                                   #>  [7] \"latitude\"                                    #>  [8] \"police_force\"                                #>  [9] \"accident_severity\"                           #> [10] \"number_of_vehicles\"                          #> [11] \"number_of_casualties\"                        #> [12] \"date\"                                        #> [13] \"day_of_week\"                                 #> [14] \"time\"                                        #> [15] \"local_authority_district\"                    #> [16] \"local_authority_ons_district\"                #> [17] \"local_authority_highway\"                     #> [18] \"first_road_class\"                            #> [19] \"first_road_number\"                           #> [20] \"road_type\"                                   #> [21] \"speed_limit\"                                 #> [22] \"junction_detail\"                             #> [23] \"junction_control\"                            #> [24] \"second_road_class\"                           #> [25] \"second_road_number\"                          #> [26] \"pedestrian_crossing_human_control\"           #> [27] \"pedestrian_crossing_physical_facilities\"     #> [28] \"light_conditions\"                            #> [29] \"weather_conditions\"                          #> [30] \"road_surface_conditions\"                     #> [31] \"special_conditions_at_site\"                  #> [32] \"carriageway_hazards\"                         #> [33] \"urban_or_rural_area\"                         #> [34] \"did_police_officer_attend_scene_of_accident\" #> [35] \"trunk_road_flag\"                             #> [36] \"lsoa_of_accident_location\"                   #> [37] \"datetime\"                                    # }"},{"path":"https://docs.ropensci.org/stats19/reference/format_ppp.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert STATS19 data into ppp (spatstat) format. ‚Äî format_ppp","title":"Convert STATS19 data into ppp (spatstat) format. ‚Äî format_ppp","text":"function wrapper around spatstat.geom::ppp() function used transform STATS19 data ppp format.","code":""},{"path":"https://docs.ropensci.org/stats19/reference/format_ppp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert STATS19 data into ppp (spatstat) format. ‚Äî format_ppp","text":"","code":"format_ppp(data, window = NULL, ...)"},{"path":"https://docs.ropensci.org/stats19/reference/format_ppp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert STATS19 data into ppp (spatstat) format. ‚Äî format_ppp","text":"data STATS19 dataframe converted ppp format. window windows observation, object class owin(). window = NULL (.e. default) function creates approximate bounding box covering whole UK. can also used filter events occurring specific region UK (see examples get_stats19). ... Additional parameters passed spatstat.geom::ppp() function. Read help page function detailed description available parameters.","code":""},{"path":"https://docs.ropensci.org/stats19/reference/format_ppp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert STATS19 data into ppp (spatstat) format. ‚Äî format_ppp","text":"ppp object.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/stats19/reference/format_ppp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert STATS19 data into ppp (spatstat) format. ‚Äî format_ppp","text":"","code":"if (requireNamespace(\"spatstat.geom\", quietly = TRUE)) {   x_ppp = format_ppp(accidents_sample)   x_ppp } #> Warning: some mark values are NA in the point pattern x #> Marked planar point pattern: 3 points #> Mark variables:  #>    accident_index accident_year accident_reference longitude latitude  #> police_force accident_severity number_of_vehicles number_of_casualties date  #> day_of_week time local_authority_district local_authority_ons_district  #> local_authority_highway first_road_class first_road_number road_type  #> speed_limit junction_detail junction_control second_road_class  #> second_road_number pedestrian_crossing_human_control  #> pedestrian_crossing_physical_facilities light_conditions weather_conditions  #> road_surface_conditions special_conditions_at_site carriageway_hazards  #> urban_or_rural_area did_police_officer_attend_scene_of_accident trunk_road_flag  #> lsoa_of_accident_location datetime #> window: rectangle = [64950, 655391] x [10235, 1209512] units"},{"path":"https://docs.ropensci.org/stats19/reference/format_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Format convert STATS19 data into spatial (sf) object ‚Äî format_sf","title":"Format convert STATS19 data into spatial (sf) object ‚Äî format_sf","text":"Format convert STATS19 data spatial (sf) object","code":""},{"path":"https://docs.ropensci.org/stats19/reference/format_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format convert STATS19 data into spatial (sf) object ‚Äî format_sf","text":"","code":"format_sf(x, lonlat = FALSE)"},{"path":"https://docs.ropensci.org/stats19/reference/format_sf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format convert STATS19 data into spatial (sf) object ‚Äî format_sf","text":"x Data frame created read_collisions() lonlat results returned longitude/latitude? default FALSE, meaning British National Grid (EPSG code: 27700) used.","code":""},{"path":"https://docs.ropensci.org/stats19/reference/format_sf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format convert STATS19 data into spatial (sf) object ‚Äî format_sf","text":"","code":"x_sf = format_sf(accidents_sample) #> 0 rows removed with no coordinates sf:::plot.sf(x_sf) #> Warning: plotting the first 10 out of 35 attributes; use max.plot = 35 to plot all"},{"path":"https://docs.ropensci.org/stats19/reference/format_vehicles.html","id":null,"dir":"Reference","previous_headings":"","what":"Format STATS19 vehicles data ‚Äî format_vehicles","title":"Format STATS19 vehicles data ‚Äî format_vehicles","text":"Format STATS19 vehicles data","code":""},{"path":"https://docs.ropensci.org/stats19/reference/format_vehicles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format STATS19 vehicles data ‚Äî format_vehicles","text":"","code":"format_vehicles(x)"},{"path":"https://docs.ropensci.org/stats19/reference/format_vehicles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format STATS19 vehicles data ‚Äî format_vehicles","text":"x Data frame created read_vehicles()","code":""},{"path":"https://docs.ropensci.org/stats19/reference/format_vehicles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Format STATS19 vehicles data ‚Äî format_vehicles","text":"function formats raw STATS19 data","code":""},{"path":"https://docs.ropensci.org/stats19/reference/format_vehicles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format STATS19 vehicles data ‚Äî format_vehicles","text":"","code":"# \\donttest{ if(curl::has_internet()) { dl_stats19(year = 2022, type = \"vehicle\", ask = FALSE) x = read_vehicles(year = 2022, format = FALSE) vehicles = format_vehicles(x) } #> Files identified: dft-road-casualty-statistics-vehicle-2022.csv #>    https://data.dft.gov.uk/road-accidents-safety-data/dft-road-casualty-statistics-vehicle-2022.csv #> Attempt downloading from: https://data.dft.gov.uk/road-accidents-safety-data/dft-road-casualty-statistics-vehicle-2022.csv #> Data saved at /tmp/Rtmpc4SGfV/dft-road-casualty-statistics-vehicle-2022.csv #> Rows: 193545 Columns: 28 #> ‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #> Delimiter: \",\" #> chr  (4): accident_index, accident_reference, generic_make_model, lsoa_of_dr... #> dbl (24): accident_year, vehicle_reference, vehicle_type, towing_and_articul... #>  #> ‚Ñπ Use `spec()` to retrieve the full column specification for this data. #> ‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message. # }"},{"path":"https://docs.ropensci.org/stats19/reference/get_MOT.html","id":null,"dir":"Reference","previous_headings":"","what":"Download vehicle data from the DVSA MOT API using VRM. ‚Äî get_MOT","title":"Download vehicle data from the DVSA MOT API using VRM. ‚Äî get_MOT","text":"Download vehicle data DVSA MOT API using VRM.","code":""},{"path":"https://docs.ropensci.org/stats19/reference/get_MOT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download vehicle data from the DVSA MOT API using VRM. ‚Äî get_MOT","text":"","code":"get_MOT(vrm, apikey)"},{"path":"https://docs.ropensci.org/stats19/reference/get_MOT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download vehicle data from the DVSA MOT API using VRM. ‚Äî get_MOT","text":"vrm list VRMs character strings. apikey API key character string.","code":""},{"path":"https://docs.ropensci.org/stats19/reference/get_MOT.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download vehicle data from the DVSA MOT API using VRM. ‚Äî get_MOT","text":"function takes character vector vehicle registrations (VRMs) returns vehicle data MOT records. returns data frame VRMs successfully used DVSA MOT API. Information DVSA MOT API available : https://dvsa.github.io/mot-history-api-documentation/ DVSA MOT API requires registration.  function therefore requires API key provided DVSA. aware API usage limits.  function therefore limit lists 150,000 VRMs.","code":""},{"path":"https://docs.ropensci.org/stats19/reference/get_MOT.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download vehicle data from the DVSA MOT API using VRM. ‚Äî get_MOT","text":"","code":"# \\donttest{ vrm = c(\"1RAC\",\"P1RAC\") apikey = Sys.getenv(\"MOTKEY\") if(nchar(apikey) > 0) {   get_MOT(vrm = vrm, apikey = apikey) } # }"},{"path":"https://docs.ropensci.org/stats19/reference/get_ULEZ.html","id":null,"dir":"Reference","previous_headings":"","what":"Download DVLA-based vehicle data from the TfL API using VRM. ‚Äî get_ULEZ","title":"Download DVLA-based vehicle data from the TfL API using VRM. ‚Äî get_ULEZ","text":"Download DVLA-based vehicle data TfL API using VRM.","code":""},{"path":"https://docs.ropensci.org/stats19/reference/get_ULEZ.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download DVLA-based vehicle data from the TfL API using VRM. ‚Äî get_ULEZ","text":"","code":"get_ULEZ(vrm)"},{"path":"https://docs.ropensci.org/stats19/reference/get_ULEZ.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download DVLA-based vehicle data from the TfL API using VRM. ‚Äî get_ULEZ","text":"vrm list VRMs character strings.","code":""},{"path":"https://docs.ropensci.org/stats19/reference/get_ULEZ.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download DVLA-based vehicle data from the TfL API using VRM. ‚Äî get_ULEZ","text":"function takes character vector vehicle registrations (VRMs) returns DVLA-based vehicle data TfL's API, included ULEZ eligibility. returns data frame VRMs successfully used TfL API.  Vehicles either compliant, non-compliant exempt.  ULEZ-exempt vehicles vehicle details returned - simply marked \"exempt\". aware API usage limits.  function therefore limit API calls 50 per minute - maximum rate API key required.","code":""},{"path":"https://docs.ropensci.org/stats19/reference/get_ULEZ.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download DVLA-based vehicle data from the TfL API using VRM. ‚Äî get_ULEZ","text":"","code":"# \\donttest{ if(curl::has_internet()) { vrm = c(\"1RAC\",\"P1RAC\") get_ULEZ(vrm = vrm) } #> This script only does 50 vrms per minute at most #> Warning: TfL ULEZ API is producing some strange results currently #>    |                                                                               |                                                                      |   0% #>     vrm API Status #> 1  1RAC        404 #> 2 P1RAC        404 # }"},{"path":"https://docs.ropensci.org/stats19/reference/get_data_directory.html","id":null,"dir":"Reference","previous_headings":"","what":"Get data download dir ‚Äî get_data_directory","title":"Get data download dir ‚Äî get_data_directory","text":"Get data download dir","code":""},{"path":"https://docs.ropensci.org/stats19/reference/get_data_directory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get data download dir ‚Äî get_data_directory","text":"","code":"get_data_directory()"},{"path":"https://docs.ropensci.org/stats19/reference/get_data_directory.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get data download dir ‚Äî get_data_directory","text":"","code":"# get_data_directory()"},{"path":"https://docs.ropensci.org/stats19/reference/get_stats19.html","id":null,"dir":"Reference","previous_headings":"","what":"Download, read and format STATS19 data in one function. ‚Äî get_stats19","title":"Download, read and format STATS19 data in one function. ‚Äî get_stats19","text":"Download, read format STATS19 data one function.","code":""},{"path":"https://docs.ropensci.org/stats19/reference/get_stats19.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download, read and format STATS19 data in one function. ‚Äî get_stats19","text":"","code":"get_stats19(   year = NULL,   type = \"collision\",   data_dir = get_data_directory(),   file_name = NULL,   format = TRUE,   ask = FALSE,   silent = FALSE,   output_format = \"tibble\",   ... )"},{"path":"https://docs.ropensci.org/stats19/reference/get_stats19.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download, read and format STATS19 data in one function. ‚Äî get_stats19","text":"year year matching file names STATS19 data release page e.g. 2020 type One 'collision', 'casualty', 'Vehicle'; defaults 'collision'. text string used match file names released DfT. data_dir Parent directory downloaded files. Defaults tempdir(). file_name file name (DfT named) download. format Switch return raw read file, default TRUE. ask asked whether download files? TRUE default. silent Boolean. FALSE (default value), display useful progress messages screen. output_format string specifies desired output format. default value \"tibble\". possible values \"data.frame\", \"sf\" \"ppp\", , respectively, returns objects class data.frame, sf::sf spatstat.geom::ppp. string ignored tibble output returned. See details examples. ... arguments passed format_sf() format_ppp() functions. Read run examples.","code":""},{"path":"https://docs.ropensci.org/stats19/reference/get_stats19.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download, read and format STATS19 data in one function. ‚Äî get_stats19","text":"function uses gets STATS19 data. Behind scenes uses dl_stats19() read_* functions, returning tibble (default), data.frame, sf ppp object, depending output_format parameter. function returns data specific year (e.g. year = 2022) Note: years 2016 function may return data years requested due nature files hosted data.gov.uk. function uses dl_stats19 function, can download many MB data, ensure sufficient disk space. output_format = \"data.frame\" output_format = \"sf\" output_format = \"ppp\" output data transformed data.frame, sf ppp object using .data.frame() format_sf() format_ppp() functions, shown examples.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/stats19/reference/get_stats19.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download, read and format STATS19 data in one function. ‚Äî get_stats19","text":"","code":"# \\donttest{ if(curl::has_internet()) { x = get_stats19(2022, silent = TRUE, format = TRUE) class(x) # data.frame output x = get_stats19(2022, silent = TRUE, output_format = \"data.frame\") class(x)  # Run tests only if endpoint is alive: if(nrow(x) > 0) {  # sf output x_sf = get_stats19(2022, silent = TRUE, output_format = \"sf\")  # sf output with lonlat coordinates x_sf = get_stats19(2022, silent = TRUE, output_format = \"sf\", lonlat = TRUE) sf::st_crs(x_sf)  if (requireNamespace(\"spatstat.geom\", quietly = TRUE)) { # ppp output x_ppp = get_stats19(2022, silent = TRUE, output_format = \"ppp\")  # We can use the window parameter of format_ppp function to filter only the # events occurred in a specific area. For example we can create a new bbox # of 5km around the city center of Leeds  leeds_window = spatstat.geom::owin( xrange = c(425046.1, 435046.1), yrange = c(428577.2, 438577.2) )  leeds_ppp = get_stats19(2022, silent = TRUE, output_format = \"ppp\", window = leeds_window) spatstat.geom::plot.ppp(leeds_ppp, use.marks = FALSE, clipwin = leeds_window)  # or even more fancy examples where we subset all the events occurred in a # pre-defined polygon area  # The following example requires osmdata package # greater_london_sf_polygon = osmdata::getbb( # \"Greater London, UK\", # format_out = \"sf_polygon\" # ) # spatstat works only with planar coordinates # greater_london_sf_polygon = sf::st_transform(greater_london_sf_polygon, 27700) # then we extract the coordinates and create the window object. # greater_london_polygon = sf::st_coordinates(greater_london_sf_polygon)[, c(1, 2)] # greater_london_window = spatstat.geom::owin(poly = greater_london_polygon)  # greater_london_ppp = get_stats19(2022, output_format = \"ppp\", window = greater_london_window) # spatstat.geom::plot.ppp(greater_london_ppp, use.marks = FALSE, clipwin = greater_london_window) } } } #> Rows: 106004 Columns: 36 #> ‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #> Delimiter: \",\" #> chr   (6): accident_index, accident_reference, date, local_authority_ons_dis... #> dbl  (29): accident_year, location_easting_osgr, location_northing_osgr, lon... #> time  (1): time #>  #> ‚Ñπ Use `spec()` to retrieve the full column specification for this data. #> ‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> date and time columns present, creating formatted datetime column #> Rows: 106004 Columns: 36 #> ‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #> Delimiter: \",\" #> chr   (6): accident_index, accident_reference, date, local_authority_ons_dis... #> dbl  (29): accident_year, location_easting_osgr, location_northing_osgr, lon... #> time  (1): time #>  #> ‚Ñπ Use `spec()` to retrieve the full column specification for this data. #> ‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> date and time columns present, creating formatted datetime column #> Rows: 106004 Columns: 36 #> ‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #> Delimiter: \",\" #> chr   (6): accident_index, accident_reference, date, local_authority_ons_dis... #> dbl  (29): accident_year, location_easting_osgr, location_northing_osgr, lon... #> time  (1): time #>  #> ‚Ñπ Use `spec()` to retrieve the full column specification for this data. #> ‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> date and time columns present, creating formatted datetime column #> 22 rows removed with no coordinates #> Rows: 106004 Columns: 36 #> ‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #> Delimiter: \",\" #> chr   (6): accident_index, accident_reference, date, local_authority_ons_dis... #> dbl  (29): accident_year, location_easting_osgr, location_northing_osgr, lon... #> time  (1): time #>  #> ‚Ñπ Use `spec()` to retrieve the full column specification for this data. #> ‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> date and time columns present, creating formatted datetime column #> 22 rows removed with no coordinates #> Rows: 106004 Columns: 36 #> ‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #> Delimiter: \",\" #> chr   (6): accident_index, accident_reference, date, local_authority_ons_dis... #> dbl  (29): accident_year, location_easting_osgr, location_northing_osgr, lon... #> time  (1): time #>  #> ‚Ñπ Use `spec()` to retrieve the full column specification for this data. #> ‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> date and time columns present, creating formatted datetime column #> 22 rows removed with no coordinates #> Warning: some mark values are NA in the point pattern x #> Rows: 106004 Columns: 36 #> ‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #> Delimiter: \",\" #> chr   (6): accident_index, accident_reference, date, local_authority_ons_dis... #> dbl  (29): accident_year, location_easting_osgr, location_northing_osgr, lon... #> time  (1): time #>  #> ‚Ñπ Use `spec()` to retrieve the full column specification for this data. #> ‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> date and time columns present, creating formatted datetime column #> 22 rows removed with no coordinates #> Warning: 105096 points were rejected as lying outside the specified window #> Warning: some mark values are NA in the point pattern x  # }"},{"path":"https://docs.ropensci.org/stats19/reference/get_stats19_adjustments.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and read-in severity adjustment factors ‚Äî get_stats19_adjustments","title":"Download and read-in severity adjustment factors ‚Äî get_stats19_adjustments","text":"See DfT's documentation adjustment factors Annex: Update severity adjustments methodology.","code":""},{"path":"https://docs.ropensci.org/stats19/reference/get_stats19_adjustments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and read-in severity adjustment factors ‚Äî get_stats19_adjustments","text":"","code":"get_stats19_adjustments(   data_dir = get_data_directory(),   u = paste0(\"https://data.dft.gov.uk/road-accidents-safety-data/\",     \"dft-road-casualty-statistics-casualty-adjustment-lookup_\",     \"2004-latest-published-year.csv\") )"},{"path":"https://docs.ropensci.org/stats19/reference/get_stats19_adjustments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and read-in severity adjustment factors ‚Äî get_stats19_adjustments","text":"data_dir sets downloaded data found. u URL zip file adjustments download","code":""},{"path":"https://docs.ropensci.org/stats19/reference/get_stats19_adjustments.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download and read-in severity adjustment factors ‚Äî get_stats19_adjustments","text":"See Estimating adjusting changes method severity reporting road accidents casualty data: final report details.","code":""},{"path":"https://docs.ropensci.org/stats19/reference/get_stats19_adjustments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and read-in severity adjustment factors ‚Äî get_stats19_adjustments","text":"","code":"# \\donttest{ if(curl::has_internet()) { adjustment = get_stats19_adjustments() } #> Rows: 3689281 Columns: 7 #> ‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #> Delimiter: \",\" #> chr (1): accident_index #> dbl (6): Vehicle_Reference, Casualty_Reference, Adjusted_Serious, Adjusted_S... #>  #> ‚Ñπ Use `spec()` to retrieve the full column specification for this data. #> ‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message. # }"},{"path":"https://docs.ropensci.org/stats19/reference/get_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert file names to urls ‚Äî get_url","title":"Convert file names to urls ‚Äî get_url","text":"Convert file names urls","code":""},{"path":"https://docs.ropensci.org/stats19/reference/get_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert file names to urls ‚Äî get_url","text":"","code":"get_url(   file_name = \"\",   domain = \"https://data.dft.gov.uk\",   directory = \"road-accidents-safety-data\" )"},{"path":"https://docs.ropensci.org/stats19/reference/get_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert file names to urls ‚Äî get_url","text":"file_name Optional file name add url returned (empty default) domain domain data downloaded directory subdirectory url","code":""},{"path":"https://docs.ropensci.org/stats19/reference/get_url.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert file names to urls ‚Äî get_url","text":"function returns urls allow data downloaded pages: https://data.dft.gov.uk/road-accidents-safety-data/RoadSafetyData_2015.zip Last updated: October 2020. Files available s3 url default domain argument.","code":""},{"path":"https://docs.ropensci.org/stats19/reference/get_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert file names to urls ‚Äî get_url","text":"","code":"# get_url(find_file_name(1985))"},{"path":"https://docs.ropensci.org/stats19/reference/locate_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Locate a file on disk ‚Äî locate_files","title":"Locate a file on disk ‚Äî locate_files","text":"Helper function locate files. Given params, function returns 0 files found location/names given.","code":""},{"path":"https://docs.ropensci.org/stats19/reference/locate_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Locate a file on disk ‚Äî locate_files","text":"","code":"locate_files(   data_dir = get_data_directory(),   type = NULL,   years = NULL,   quiet = FALSE )"},{"path":"https://docs.ropensci.org/stats19/reference/locate_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Locate a file on disk ‚Äî locate_files","text":"data_dir Super directory dataset(s) first downloaded . type One 'Collision', 'Casualties', 'Vehicles'; defaults 'Collision', ignores case. years Years data found quiet Print messages (files found)","code":""},{"path":"https://docs.ropensci.org/stats19/reference/locate_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Locate a file on disk ‚Äî locate_files","text":"Character string representing full path single file found, list directories data Department Transport (stats19::filenames) downloaded, NULL files found.","code":""},{"path":"https://docs.ropensci.org/stats19/reference/locate_one_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Pin down a file on disk from four parameters. ‚Äî locate_one_file","title":"Pin down a file on disk from four parameters. ‚Äî locate_one_file","text":"Pin file disk four parameters.","code":""},{"path":"https://docs.ropensci.org/stats19/reference/locate_one_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pin down a file on disk from four parameters. ‚Äî locate_one_file","text":"","code":"locate_one_file(   filename = NULL,   data_dir = get_data_directory(),   year = NULL,   type = NULL )"},{"path":"https://docs.ropensci.org/stats19/reference/locate_one_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pin down a file on disk from four parameters. ‚Äî locate_one_file","text":"filename Character string filename .csv read, given, type years determine whether target read, otherwise disk scan needed. data_dir sets downloaded data found. year Single year file found. type One : 'Collision', 'Casualties', 'Vehicles'; ignores case.","code":""},{"path":"https://docs.ropensci.org/stats19/reference/locate_one_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pin down a file on disk from four parameters. ‚Äî locate_one_file","text":"One : path one file, message one file found error none found.","code":""},{"path":"https://docs.ropensci.org/stats19/reference/locate_one_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pin down a file on disk from four parameters. ‚Äî locate_one_file","text":"","code":"# \\donttest{ locate_one_file() #> character(0) locate_one_file(filename = \"Cas.csv\") #> character(0) # }"},{"path":"https://docs.ropensci.org/stats19/reference/phrase.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a phrase for data download purposes ‚Äî phrase","title":"Generate a phrase for data download purposes ‚Äî phrase","text":"Generate phrase data download purposes","code":""},{"path":"https://docs.ropensci.org/stats19/reference/phrase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a phrase for data download purposes ‚Äî phrase","text":"","code":"phrase()"},{"path":"https://docs.ropensci.org/stats19/reference/phrase.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a phrase for data download purposes ‚Äî phrase","text":"","code":"stats19:::phrase() #> [1] \"Happy to go (y = enter, n = N/other)? \""},{"path":"https://docs.ropensci.org/stats19/reference/police_boundaries.html","id":null,"dir":"Reference","previous_headings":"","what":"Police force boundaries in England (2016) ‚Äî police_boundaries","title":"Police force boundaries in England (2016) ‚Äî police_boundaries","text":"dataset represents 43 police forces England Wales. described Wikipedia page. UK police forces.","code":""},{"path":"https://docs.ropensci.org/stats19/reference/police_boundaries.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Police force boundaries in England (2016) ‚Äî police_boundaries","text":"sf data frame","code":""},{"path":"https://docs.ropensci.org/stats19/reference/police_boundaries.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Police force boundaries in England (2016) ‚Äî police_boundaries","text":"geographic boundary data taken UK government's official geographic data portal. See http://geoportal.statistics.gov.uk/","code":""},{"path":"https://docs.ropensci.org/stats19/reference/police_boundaries.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Police force boundaries in England (2016) ‚Äî police_boundaries","text":"generated using script data-raw directory (misc.Rmd file) package's GitHub repo: github.com/ITSLeeds/stats19.","code":""},{"path":"https://docs.ropensci.org/stats19/reference/police_boundaries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Police force boundaries in England (2016) ‚Äî police_boundaries","text":"","code":"nrow(police_boundaries) #> [1] 43 police_boundaries[police_boundaries$pfa16nm == \"West Yorkshire\", ] #> old-style crs object detected; please recreate object with a recent sf::st_crs() #> old-style crs object detected; please recreate object with a recent sf::st_crs() #> Simple feature collection with 1 feature and 2 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: 388662.6 ymin: 402593.5 xmax: 452991.6 ymax: 451901.4 #> Projected CRS: OSGB36 / British National Grid #> # A tibble: 1 √ó 3 #>   pfa16cd   pfa16nm                                                     geometry #>   <chr>     <chr>                                             <MULTIPOLYGON [m]> #> 1 E23000010 West Yorkshire (((408054.7 451818.9, 408045.8 450915.7, 408358.1 44‚Ä¶ sf:::plot.sf(police_boundaries) #> old-style crs object detected; please recreate object with a recent sf::st_crs() #> old-style crs object detected; please recreate object with a recent sf::st_crs() #> old-style crs object detected; please recreate object with a recent sf::st_crs() #> old-style crs object detected; please recreate object with a recent sf::st_crs() #> old-style crs object detected; please recreate object with a recent sf::st_crs() #> old-style crs object detected; please recreate object with a recent sf::st_crs() #> old-style crs object detected; please recreate object with a recent sf::st_crs() #> old-style crs object detected; please recreate object with a recent sf::st_crs() #> old-style crs object detected; please recreate object with a recent sf::st_crs() #> old-style crs object detected; please recreate object with a recent sf::st_crs() #> old-style crs object detected; please recreate object with a recent sf::st_crs()"},{"path":"https://docs.ropensci.org/stats19/reference/read_casualties.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in STATS19 road safety data from .csv files downloaded. ‚Äî read_casualties","title":"Read in STATS19 road safety data from .csv files downloaded. ‚Äî read_casualties","text":"Read STATS19 road safety data .csv files downloaded.","code":""},{"path":"https://docs.ropensci.org/stats19/reference/read_casualties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in STATS19 road safety data from .csv files downloaded. ‚Äî read_casualties","text":"","code":"read_casualties(   year = NULL,   filename = \"\",   data_dir = get_data_directory(),   format = TRUE )"},{"path":"https://docs.ropensci.org/stats19/reference/read_casualties.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in STATS19 road safety data from .csv files downloaded. ‚Äî read_casualties","text":"year Single year data read filename Character string filename .csv read, given, type years determine whether target read, otherwise disk scan needed. data_dir sets downloaded data found. format Switch return raw read file, default TRUE.","code":""},{"path":"https://docs.ropensci.org/stats19/reference/read_casualties.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read in STATS19 road safety data from .csv files downloaded. ‚Äî read_casualties","text":"function returns data frame, record reported casualty STATS19 dataset.","code":""},{"path":"https://docs.ropensci.org/stats19/reference/read_casualties.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read in STATS19 road safety data from .csv files downloaded. ‚Äî read_casualties","text":"","code":"# \\donttest{ if(curl::has_internet()) { dl_stats19(year = 2022, type = \"casualty\") casualties = read_casualties(year = 2022) } #> Files identified: dft-road-casualty-statistics-casualty-2022.csv #>    https://data.dft.gov.uk/road-accidents-safety-data/dft-road-casualty-statistics-casualty-2022.csv #> Data already exists in data_dir, not downloading #> Rows: 135480 Columns: 19 #> ‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #> Delimiter: \",\" #> chr  (3): accident_index, accident_reference, lsoa_of_casualty #> dbl (16): accident_year, vehicle_reference, casualty_reference, casualty_cla... #>  #> ‚Ñπ Use `spec()` to retrieve the full column specification for this data. #> ‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message. # }"},{"path":"https://docs.ropensci.org/stats19/reference/read_collisions.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in STATS19 road safety data from .csv files downloaded. ‚Äî read_collisions","title":"Read in STATS19 road safety data from .csv files downloaded. ‚Äî read_collisions","text":"Read STATS19 road safety data .csv files downloaded.","code":""},{"path":"https://docs.ropensci.org/stats19/reference/read_collisions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in STATS19 road safety data from .csv files downloaded. ‚Äî read_collisions","text":"","code":"read_collisions(   year = NULL,   filename = \"\",   data_dir = get_data_directory(),   format = TRUE,   silent = FALSE )"},{"path":"https://docs.ropensci.org/stats19/reference/read_collisions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in STATS19 road safety data from .csv files downloaded. ‚Äî read_collisions","text":"year Single year data read filename Character string filename .csv read, given, type years determine whether target read, otherwise disk scan needed. data_dir sets downloaded data found. format Switch return raw read file, default TRUE. silent Boolean. FALSE (default value), display useful progress messages screen.","code":""},{"path":"https://docs.ropensci.org/stats19/reference/read_collisions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read in STATS19 road safety data from .csv files downloaded. ‚Äî read_collisions","text":"wrapper function access load stats 19 data user-friendly way. function returns data frame, record reported incident STATS19 data.","code":""},{"path":"https://docs.ropensci.org/stats19/reference/read_collisions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read in STATS19 road safety data from .csv files downloaded. ‚Äî read_collisions","text":"","code":"# \\donttest{ if(curl::has_internet()) { dl_stats19(year = 2019, type = \"collision\") ac = read_collisions(year = 2019)  dl_stats19(year = 2019, type = \"collision\") ac_2019 = read_collisions(year = 2019) } #> Files identified: dft-road-casualty-statistics-collision-2019.csv #>    https://data.dft.gov.uk/road-accidents-safety-data/dft-road-casualty-statistics-collision-2019.csv #> Attempt downloading from: https://data.dft.gov.uk/road-accidents-safety-data/dft-road-casualty-statistics-collision-2019.csv #> Data saved at /tmp/Rtmpc4SGfV/dft-road-casualty-statistics-collision-2019.csv #> Reading in:  #> /tmp/Rtmpc4SGfV/dft-road-casualty-statistics-collision-2019.csv #> Rows: 117536 Columns: 36 #> ‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #> Delimiter: \",\" #> chr   (6): accident_index, accident_reference, date, local_authority_ons_dis... #> dbl  (29): accident_year, location_easting_osgr, location_northing_osgr, lon... #> time  (1): time #>  #> ‚Ñπ Use `spec()` to retrieve the full column specification for this data. #> ‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> date and time columns present, creating formatted datetime column #> Files identified: dft-road-casualty-statistics-collision-2019.csv #>    https://data.dft.gov.uk/road-accidents-safety-data/dft-road-casualty-statistics-collision-2019.csv #> Data already exists in data_dir, not downloading #> Reading in:  #> /tmp/Rtmpc4SGfV/dft-road-casualty-statistics-collision-2019.csv #> Rows: 117536 Columns: 36 #> ‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #> Delimiter: \",\" #> chr   (6): accident_index, accident_reference, date, local_authority_ons_dis... #> dbl  (29): accident_year, location_easting_osgr, location_northing_osgr, lon... #> time  (1): time #>  #> ‚Ñπ Use `spec()` to retrieve the full column specification for this data. #> ‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> date and time columns present, creating formatted datetime column # }"},{"path":"https://docs.ropensci.org/stats19/reference/read_vehicles.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in stats19 road safety data from .csv files downloaded. ‚Äî read_vehicles","title":"Read in stats19 road safety data from .csv files downloaded. ‚Äî read_vehicles","text":"Read stats19 road safety data .csv files downloaded.","code":""},{"path":"https://docs.ropensci.org/stats19/reference/read_vehicles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in stats19 road safety data from .csv files downloaded. ‚Äî read_vehicles","text":"","code":"read_vehicles(   year = NULL,   filename = \"\",   data_dir = get_data_directory(),   format = TRUE )"},{"path":"https://docs.ropensci.org/stats19/reference/read_vehicles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in stats19 road safety data from .csv files downloaded. ‚Äî read_vehicles","text":"year Single year data read filename Character string filename .csv read, given, type years determine whether target read, otherwise disk scan needed. data_dir sets downloaded data found. format Switch return raw read file, default TRUE.","code":""},{"path":"https://docs.ropensci.org/stats19/reference/read_vehicles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read in stats19 road safety data from .csv files downloaded. ‚Äî read_vehicles","text":"function returns data frame, record reported vehicle STATS19 dataset data_dir filename provided.","code":""},{"path":"https://docs.ropensci.org/stats19/reference/read_vehicles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read in stats19 road safety data from .csv files downloaded. ‚Äî read_vehicles","text":"","code":"# \\donttest{ if(curl::has_internet()) { dl_stats19(year = 2019, type = \"vehicle\") ve = read_vehicles(year = 2019) } #> Files identified: dft-road-casualty-statistics-vehicle-2019.csv #>    https://data.dft.gov.uk/road-accidents-safety-data/dft-road-casualty-statistics-vehicle-2019.csv #> Attempt downloading from: https://data.dft.gov.uk/road-accidents-safety-data/dft-road-casualty-statistics-vehicle-2019.csv #> Data saved at /tmp/Rtmpc4SGfV/dft-road-casualty-statistics-vehicle-2019.csv #> Rows: 216381 Columns: 28 #> ‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #> Delimiter: \",\" #> chr  (4): accident_index, accident_reference, generic_make_model, lsoa_of_dr... #> dbl (24): accident_year, vehicle_reference, vehicle_type, towing_and_articul... #>  #> ‚Ñπ Use `spec()` to retrieve the full column specification for this data. #> ‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message. # }"},{"path":"https://docs.ropensci.org/stats19/reference/schema_original.html","id":null,"dir":"Reference","previous_headings":"","what":"Schema for stats19 data (UKDS) ‚Äî schema_original","title":"Schema for stats19 data (UKDS) ‚Äî schema_original","text":"Schema stats19 data (UKDS)","code":""},{"path":"https://docs.ropensci.org/stats19/reference/schema_original.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Schema for stats19 data (UKDS) ‚Äî schema_original","text":"data frame","code":""},{"path":"https://docs.ropensci.org/stats19/reference/select_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactively select from options ‚Äî select_file","title":"Interactively select from options ‚Äî select_file","text":"Interactively select options","code":""},{"path":"https://docs.ropensci.org/stats19/reference/select_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactively select from options ‚Äî select_file","text":"","code":"select_file(fnames)"},{"path":"https://docs.ropensci.org/stats19/reference/select_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactively select from options ‚Äî select_file","text":"fnames File names select ","code":""},{"path":"https://docs.ropensci.org/stats19/reference/select_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interactively select from options ‚Äî select_file","text":"","code":"# fnames = c(\"f1\", \"f2\") # stats19:::select_file(fnames)"},{"path":"https://docs.ropensci.org/stats19/reference/set_data_directory.html","id":null,"dir":"Reference","previous_headings":"","what":"Set data download dir ‚Äî set_data_directory","title":"Set data download dir ‚Äî set_data_directory","text":"Handy function manage stats19 package underlying environment variable. run interactively makes sure user change directory mistatke.","code":""},{"path":"https://docs.ropensci.org/stats19/reference/set_data_directory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set data download dir ‚Äî set_data_directory","text":"","code":"set_data_directory(data_path)"},{"path":"https://docs.ropensci.org/stats19/reference/set_data_directory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set data download dir ‚Äî set_data_directory","text":"data_path valid existing path save downloaded files .","code":""},{"path":"https://docs.ropensci.org/stats19/reference/set_data_directory.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set data download dir ‚Äî set_data_directory","text":"","code":"# set_data_directory(\"MY_PATH\")"},{"path":"https://docs.ropensci.org/stats19/reference/stats19_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"Stats19 schema and variables ‚Äî stats19_schema","title":"Stats19 schema and variables ‚Äî stats19_schema","text":"stats19_schema stats19_variables contain metadata stats19 data. stats19_schema look-table matching codes provided raw stats19 dataset character strings.","code":""},{"path":"https://docs.ropensci.org/stats19/reference/stats19_schema.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Stats19 schema and variables ‚Äî stats19_schema","text":"schema data can (re-)generated using script data-raw directory.","code":""},{"path":"https://docs.ropensci.org/stats19/reference/vehicles_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample of stats19 data (2022 vehicles) ‚Äî vehicles_sample","title":"Sample of stats19 data (2022 vehicles) ‚Äî vehicles_sample","text":"Sample stats19 data (2022 vehicles)","code":""},{"path":"https://docs.ropensci.org/stats19/reference/vehicles_sample.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample of stats19 data (2022 vehicles) ‚Äî vehicles_sample","text":"data frame","code":""},{"path":"https://docs.ropensci.org/stats19/reference/vehicles_sample.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Sample of stats19 data (2022 vehicles) ‚Äî vehicles_sample","text":"generated using script data-raw directory (misc.Rmd file).","code":""},{"path":"https://docs.ropensci.org/stats19/reference/vehicles_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample of stats19 data (2022 vehicles) ‚Äî vehicles_sample","text":"","code":"# \\donttest{ nrow(vehicles_sample_raw) #> [1] 3 vehicles_sample_raw #> # A tibble: 3 √ó 23 #>   Accident_Index Vehicle_Reference Vehicle_Type Towing_and_Articulation #>   <chr>                      <int>        <int>                   <int> #> 1 2017010047506                  2            9                       0 #> 2 2017010068468                  2           21                       0 #> 3 2017471704529                  3            9                       0 #> # ‚Ñπ 19 more variables: Vehicle_Manoeuvre <int>, #> #   `Vehicle_Location-Restricted_Lane` <int>, Junction_Location <int>, #> #   Skidding_and_Overturning <int>, Hit_Object_in_Carriageway <int>, #> #   Vehicle_Leaving_Carriageway <int>, Hit_Object_off_Carriageway <int>, #> #   `1st_Point_of_Impact` <int>, `Was_Vehicle_Left_Hand_Drive?` <int>, #> #   Journey_Purpose_of_Driver <int>, Sex_of_Driver <int>, Age_of_Driver <int>, #> #   Age_Band_of_Driver <int>, `Engine_Capacity_(CC)` <int>, ‚Ä¶ # }"},{"path":"https://docs.ropensci.org/stats19/news/index.html","id":"stats19-303-2024-02","dir":"Changelog","previous_headings":"","what":"stats19 3.0.3 2024-02","title":"stats19 3.0.3 2024-02","text":"CRAN release: 2024-02-08 Update documentation account shift table names, replacing accidents collisions casualty casualties (#232)","code":""},{"path":"https://docs.ropensci.org/stats19/news/index.html","id":"stats19-302-2023-11","dir":"Changelog","previous_headings":"","what":"stats19 3.0.2 2023-11","title":"stats19 3.0.2 2023-11","text":"CRAN release: 2023-11-04 Fix issue coordinates characters (#228)","code":""},{"path":"https://docs.ropensci.org/stats19/news/index.html","id":"stats19-301-2023-10","dir":"Changelog","previous_headings":"","what":"stats19 3.0.1 2023-10","title":"stats19 3.0.1 2023-10","text":"Minor update increase default timeout get_stats19() 10 minutes (#226)","code":""},{"path":"https://docs.ropensci.org/stats19/news/index.html","id":"stats19-300-2023-10","dir":"Changelog","previous_headings":"","what":"stats19 3.0.0 2023-10","title":"stats19 3.0.0 2023-10","text":"CRAN release: 2023-10-12 Major update package works new csv files (2022) Deprecation read_accidents favour read_collisions using consistent collision instead accidents. minor improvements","code":""},{"path":"https://docs.ropensci.org/stats19/news/index.html","id":"stats19-201-2022-11","dir":"Changelog","previous_headings":"","what":"stats19 2.0.1 2022-11","title":"stats19 2.0.1 2022-11","text":"CRAN release: 2022-11-17 Changes spatstat.core related code (#217)","code":""},{"path":"https://docs.ropensci.org/stats19/news/index.html","id":"stats19-200-2020-10","dir":"Changelog","previous_headings":"","what":"stats19 2.0.0 2020-10","title":"stats19 2.0.0 2020-10","text":"CRAN release: 2021-10-29 Major changes datasets provided DfT led major changes package. See (#212) details. reduce code complexity package longer supports reading multiple years puts onus user package understand input data, rather relying clever coding join everything together. Note: can easily join different years, e.g.¬†command purrr::map_dfr().","code":""},{"path":"https://docs.ropensci.org/stats19/news/index.html","id":"stats19-150-2021-10","dir":"Changelog","previous_headings":"","what":"stats19 1.5.0 2021-10","title":"stats19 1.5.0 2021-10","text":"Support new https download links (#208) Package tests now pass wifi turned URLs fixed","code":""},{"path":"https://docs.ropensci.org/stats19/news/index.html","id":"stats19-143-2021-07-21","dir":"Changelog","previous_headings":"","what":"stats19 1.4.3 2021-07-21","title":"stats19 1.4.3 2021-07-21","text":"CRAN release: 2021-07-21 Use 1st edition readr Windows prevent errors reading data (#205)","code":""},{"path":"https://docs.ropensci.org/stats19/news/index.html","id":"stats19-142-2021-07","dir":"Changelog","previous_headings":"","what":"stats19 1.4.2 2021-07","title":"stats19 1.4.2 2021-07","text":"Fix CRAN checks associated access online resources (#204) Fix issues associated get_ULEZ() get_MOT() functions","code":""},{"path":"https://docs.ropensci.org/stats19/news/index.html","id":"stats19-141","dir":"Changelog","previous_headings":"","what":"stats19 1.4.1","title":"stats19 1.4.1","text":"CRAN release: 2021-03-28 New function get_ULEZ() get data vehicles number plate (thanks Ivo Wengraf) Added test prevent rare failures get_stats19() data_dir points working directory","code":""},{"path":"https://docs.ropensci.org/stats19/news/index.html","id":"stats19-140","dir":"Changelog","previous_headings":"","what":"stats19 1.4.0","title":"stats19 1.4.0","text":"CRAN release: 2021-03-15 Add get_stats19_adjustments() function Use GH Actions CI (#177) Fixed problem get_stats19() multiple years linked data file (#168) Fix issues vignettes CRAN (#190)","code":""},{"path":"https://docs.ropensci.org/stats19/news/index.html","id":"stats19-130","dir":"Changelog","previous_headings":"","what":"stats19 1.3.0","title":"stats19 1.3.0","text":"CRAN release: 2020-10-01 Support 2019 data (#171)","code":""},{"path":"https://docs.ropensci.org/stats19/news/index.html","id":"stats19-120","dir":"Changelog","previous_headings":"","what":"stats19 1.2.0","title":"stats19 1.2.0","text":"CRAN release: 2020-03-03 Tests now pass development version R (4.0.0) package now hex sticker! See https://github.com/ropensci/stats19/issues/132 discussion output formatted crash datasets gains new column, datetime properly formatted date-time (POSIXct) object correct timezone (Europe/London) (#146) Enables download multiple years per https://github.com/ropensci/stats19/issues/99, thanks Layik Hama Users can now set default data download directory STATS19_DOWNLOAD_DIRECTORY=/path//data .Renviron file: https://github.com/ropensci/stats19/issues/141 get_stats19() gains new argument output_format() enables results returned sf object ppp object use spatstat package thanks work Andrea Gilardi https://github.com/ropensci/stats19/pull/136","code":""},{"path":"https://docs.ropensci.org/stats19/news/index.html","id":"stats19-110","dir":"Changelog","previous_headings":"","what":"stats19 1.1.0","title":"stats19 1.1.0","text":"CRAN release: 2019-10-15 Now enables download 2018 data Various bug fixes, see https://github.com/ropensci/stats19/issues Update website link: https://docs.ropensci.org/stats19/ New work--progress vignette vehicles data: https://docs.ropensci.org/stats19/articles/stats19-vehicles.html","code":""},{"path":"https://docs.ropensci.org/stats19/news/index.html","id":"stats19-100","dir":"Changelog","previous_headings":"","what":"stats19 1.0.0","title":"stats19 1.0.0","text":"CRAN release: 2019-07-28 Major change dl_stats19(): now much easier download STATS19 data. default ask = FALSE get_stats19() dl_stats19().","code":""},{"path":"https://docs.ropensci.org/stats19/news/index.html","id":"stats19-021","dir":"Changelog","previous_headings":"","what":"stats19 0.2.1","title":"stats19 0.2.1","text":"CRAN release: 2019-04-03 Fixed issue column labels - see #82","code":""},{"path":"https://docs.ropensci.org/stats19/news/index.html","id":"stats19-020","dir":"Changelog","previous_headings":"","what":"stats19 0.2.0","title":"stats19 0.2.0","text":"CRAN release: 2019-02-15 get_stats19() gains ask argument (TRUE default, set FALSE make road crash data access even automated!) date column now correct class formatting POSIXct. See #86 Added NEWS.md file track changes package.","code":""}]
